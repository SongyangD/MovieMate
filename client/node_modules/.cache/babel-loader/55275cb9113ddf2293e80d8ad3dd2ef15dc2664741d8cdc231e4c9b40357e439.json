{"ast":null,"code":"var _jsxFileName = \"/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/MoviesPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Box, Container, dividerClasses } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport Pagination from '../components/Pagination';\nimport Typography from '@mui/material/Typography';\nimport Filter from '../components/MovieFilter';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function MoviesPage() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  // const [currentMovies, setCurrentMovies] = useState(movies.slice(0, ITEMS_PER_PAGE));\n\n  const moviesPerPage = 30;\n  const totalMovies = movies.length;\n  const totalPages = Math.ceil(totalMovies / moviesPerPage);\n  const indexOfLastMovie = currentPage * moviesPerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n  const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\n  // const currentMovies = filteredMovies.length > 0 ? filteredMovies.slice(indexOfFirstMovie, indexOfLastMovie) : movies.slice(indexOfFirstMovie, indexOfLastMovie);\n\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/movies`).then(res => res.json()).then(resJson => setMovies(resJson));\n  }, []);\n\n  // flexFormat provides the formatting options for a \"flexbox\" layout that enables the album cards to\n  // be displayed side-by-side and wrap to the next line when the screen is too narrow. Flexboxes are\n  // incredibly powerful. You can learn more on MDN web docs linked below (or many other online resources)\n  // https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox\n  const flexFormat = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly'\n  };\n  const handleChangePage = page => {\n    setCurrentPage(page);\n  };\n\n  // const handleFilteredMovies = (filteredMovies) => {\n  //   setMovies(filteredMovies);\n  //   setFilteredMovies(filteredMovies);\n  // };\n  const handleFilteredMovies = filteredMovies => {\n    const queryParams = new URLSearchParams({\n      title: filteredMovies.title,\n      genre: filteredMovies.selectedGenre,\n      language: filteredMovies.selectedLanguage,\n      country: filteredMovies.selectedCountry,\n      isOscar: filteredMovies.checkIsOscar,\n      year_start: filteredMovies.yearRange[0],\n      year_end: filteredMovies.yearRange[1]\n    });\n    fetch(`http://${config.server_host}:${config.server_port}/search_movies?${queryParams}`)\n    // fetch(`http://${config.server_host}:${config.server_port}/movies/filter?${queryParams}`)\n    .then(res => res.json()).then(resJson => setMovies(resJson));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      onFilter: handleFilteredMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '10px',\n        marginTop: '30px'\n      },\n      children: currentMovies.map(movie => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 'calc(20% - 10px)',\n          minWidth: '150px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \" \",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.poster_url,\n            alt: movie.title,\n            style: {\n              height: '300px',\n              width: '210px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          sx: {\n            marginTop: '5px',\n            textAlign: 'center',\n            fontSize: '12px'\n          },\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-page\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: '40px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: totalPages,\n        currentPage: currentPage,\n        onChangePage: handleChangePage,\n        sx: {\n          '& .MuiPaginationItem-root': {\n            fontSize: '1.8rem',\n            padding: '8px'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesPage, \"UCmkAZW0I1wHmQF8TTSf7U0eP3A=\");\n_c = MoviesPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"names":["useEffect","useState","Box","Container","dividerClasses","NavLink","Pagination","Typography","Filter","useLocation","config","require","MoviesPage","movies","setMovies","currentPage","setCurrentPage","filteredMovies","setFilteredMovies","moviesPerPage","totalMovies","length","totalPages","Math","ceil","indexOfLastMovie","indexOfFirstMovie","currentMovies","slice","fetch","server_host","server_port","then","res","json","resJson","flexFormat","display","flexDirection","flexWrap","justifyContent","handleChangePage","page","handleFilteredMovies","queryParams","URLSearchParams","title","genre","selectedGenre","language","selectedLanguage","country","selectedCountry","isOscar","checkIsOscar","year_start","yearRange","year_end","marginTop","gap","map","movie","width","minWidth","poster_url","height","textAlign","fontSize","id","alignItems","margin","padding"],"sources":["/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/MoviesPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Box, Container, dividerClasses } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport Pagination from '../components/Pagination';\nimport Typography from '@mui/material/Typography';\nimport Filter from '../components/MovieFilter';\nimport { useLocation } from 'react-router-dom';\n\nconst config = require('../config.json');\n\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  // const [currentMovies, setCurrentMovies] = useState(movies.slice(0, ITEMS_PER_PAGE));\n\n  const moviesPerPage = 30;\n  const totalMovies = movies.length;\n  const totalPages = Math.ceil(totalMovies / moviesPerPage);\n  const indexOfLastMovie = currentPage * moviesPerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n  const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\n  // const currentMovies = filteredMovies.length > 0 ? filteredMovies.slice(indexOfFirstMovie, indexOfLastMovie) : movies.slice(indexOfFirstMovie, indexOfLastMovie);\n\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/movies`)\n      .then(res => res.json())\n      .then(resJson => setMovies(resJson));\n  }, []);\n\n  // flexFormat provides the formatting options for a \"flexbox\" layout that enables the album cards to\n  // be displayed side-by-side and wrap to the next line when the screen is too narrow. Flexboxes are\n  // incredibly powerful. You can learn more on MDN web docs linked below (or many other online resources)\n  // https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox\n  const flexFormat = { display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-evenly' };\n\n  const handleChangePage = (page) => {\n    setCurrentPage(page);\n  };\n\n  // const handleFilteredMovies = (filteredMovies) => {\n  //   setMovies(filteredMovies);\n  //   setFilteredMovies(filteredMovies);\n  // };\n  const handleFilteredMovies = (filteredMovies) => {\n    const queryParams = new URLSearchParams({\n      title: filteredMovies.title,\n      genre: filteredMovies.selectedGenre,\n      language: filteredMovies.selectedLanguage,\n      country: filteredMovies.selectedCountry,\n      isOscar: filteredMovies.checkIsOscar,\n      year_start: filteredMovies.yearRange[0],\n      year_end: filteredMovies.yearRange[1]\n    });\n  \n    fetch(`http://${config.server_host}:${config.server_port}/search_movies?${queryParams}`)\n    // fetch(`http://${config.server_host}:${config.server_port}/movies/filter?${queryParams}`)\n      .then(res => res.json())\n      .then(resJson => setMovies(resJson));\n  };\n\n  return (\n    <Container style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', marginTop: '50px' }}>\n      {/* <Filter style={{ margin: 'auto' }} /> */}\n      <Filter onFilter={handleFilteredMovies} />\n      <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginTop: '30px' }}>\n        {currentMovies.map(movie => (\n          <Box key={movie.id} sx={{ width: 'calc(20% - 10px)', minWidth: '150px' }}>\n            <a href=\" \">\n              <img src={movie.poster_url} alt={movie.title} style={{ height: '300px', width: '210px' }} />\n            </a>\n            <Typography variant=\"h2\" sx={{ marginTop: '5px', textAlign: 'center', fontSize: '12px' }}>\n              {movie.title}\n            </Typography>\n          </Box>\n        ))}\n      </Box>\n      <div className=\"movie-page\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', margin: '40px 0' }}>\n        <Pagination\n          count={totalPages}\n          currentPage={currentPage}\n          onChangePage={handleChangePage}\n          sx={{ '& .MuiPaginationItem-root': { fontSize: '1.8rem', padding: '8px' } }} />\n      </div>\n    </Container>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}