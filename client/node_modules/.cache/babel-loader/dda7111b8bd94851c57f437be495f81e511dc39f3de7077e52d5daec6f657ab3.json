{"ast":null,"code":"var _jsxFileName = \"/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/MoviesInfoPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\n\n// import SongCard from '../components/SongCard';\n// import { formatDuration, formatReleaseDate } from '../helpers/formatter';\nimport Card from '@mui/material/Card';\n// import CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\n// import Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nconst styles = {\n  cardContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n    margin: '0 auto'\n  },\n  cardMedia: {\n    width: 300,\n    // set a fixed width\n    height: 450,\n    // set a fixed height\n    flex: '0 0 200px'\n  },\n  cardContent: {\n    flex: '1 1 auto',\n    margin: '0 16px',\n    minWidth: 0\n    // fontSize: '2rem',\n  }\n};\n\nexport default function MovieInfoPage() {\n  _s();\n  // const { movie_id } = useParams();\n  const movie_id = 'tt0111161';\n\n  // const [songData, setSongData] = useState([{}]); // default should actually just be [], but empty object element added to avoid error in template code\n  const [movieData, setMovieData] = useState([]);\n  const [moviePeople, setMoviePeople] = useState([{}]);\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/movies/${movie_id}`).then(res => res.json()).then(resJson => {\n      console.log('Movie data:', resJson);\n      setMovieData(resJson);\n    });\n    fetch(`http://${config.server_host}:${config.server_port}/movie_people/${movie_id}`).then(res => res.json()).then(resJson => setMoviePeople(resJson));\n  }, [movie_id]);\n\n  //   return (\n  //     <Container>\n  //         {/* {selectedSongId && <SongCard songId={selectedSongId} handleClose={() => setSelectedSongId(null)} />} */}\n  //         <Stack direction='row' justify='center'>\n  //           <img\n  //             key={movieData.imdb_title_id}\n  //             src={movieData.poster_url}\n  //             alt={`${movieData.title} `}\n  //             style={{\n  //               marginTop: '40px',\n  //               marginRight: '40px',\n  //               marginBottom: '40px'\n  //             }} />\n  //           <Stack>\n  //             <h1 style={{ fontSize: 64 }}>{movieData.title}</h1>\n  //             <h2>Released: {formatReleaseDate(movieData.year)}</h2>\n  //           </Stack>\n  //         </Stack>\n  //       </Container>\n  //   );\n  // }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '2%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: styles.cardContainer,\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          sx: styles.cardMedia,\n          image: movieData.poster_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: styles.cardContent,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/movies/${movieData.imdb_title_id}`,\n              children: movieData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            sx: {\n              fontSize: 16\n            },\n            children: [\"Release year: \", movieData.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            sx: {\n              fontSize: 16\n            },\n            children: [\"Duration: \", movieData.duration, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            sx: {\n              fontSize: 16\n            },\n            children: [\"Director: \", movieData.director_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            sx: {\n              fontSize: 16\n            },\n            children: [\"Oscar Nominations: \", movieData.num_nominations]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            style: {\n              marginTop: '16px'\n            },\n            children: movieData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieInfoPage, \"c3qgrnnb8nSMIUrCNU9raT9sjJc=\");\n_c = MovieInfoPage;\nvar _c;\n$RefreshReg$(_c, \"MovieInfoPage\");","map":{"version":3,"names":["useEffect","useState","useParams","Container","Link","Stack","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Card","CardContent","CardMedia","Typography","config","require","styles","cardContainer","display","flexDirection","alignItems","width","margin","cardMedia","height","flex","cardContent","minWidth","MovieInfoPage","movie_id","movieData","setMovieData","moviePeople","setMoviePeople","fetch","server_host","server_port","then","res","json","resJson","console","log","poster_url","imdb_title_id","title","fontSize","year","duration","director_name","num_nominations","marginTop","description"],"sources":["/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/MoviesInfoPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\n\n// import SongCard from '../components/SongCard';\n// import { formatDuration, formatReleaseDate } from '../helpers/formatter';\nimport Card from '@mui/material/Card';\n// import CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\n// import Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\n\nconst config = require('../config.json');\n\nconst styles = {\n  cardContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%', \n    margin: '0 auto',\n  },\n  cardMedia: {\n    width: 300, // set a fixed width\n    height: 450, // set a fixed height\n    flex: '0 0 200px',\n  },\n  cardContent: {\n    flex: '1 1 auto',\n    margin: '0 16px',\n    minWidth: 0,\n    // fontSize: '2rem',\n  },\n};\nexport default function MovieInfoPage() {\n  // const { movie_id } = useParams();\n  const movie_id = 'tt0111161';\n\n  // const [songData, setSongData] = useState([{}]); // default should actually just be [], but empty object element added to avoid error in template code\n  const [movieData, setMovieData] = useState([]);\n  const [moviePeople, setMoviePeople] = useState([{}]);\n\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/movies/${movie_id}`)\n      .then(res => res.json())\n      .then(resJson => {\n        console.log('Movie data:', resJson);\n        setMovieData(resJson);\n      });\n\n    fetch(`http://${config.server_host}:${config.server_port}/movie_people/${movie_id}`)\n      .then(res => res.json())\n      .then(resJson => setMoviePeople(resJson));\n  }, [movie_id]);\n\n  //   return (\n  //     <Container>\n  //         {/* {selectedSongId && <SongCard songId={selectedSongId} handleClose={() => setSelectedSongId(null)} />} */}\n  //         <Stack direction='row' justify='center'>\n  //           <img\n  //             key={movieData.imdb_title_id}\n  //             src={movieData.poster_url}\n  //             alt={`${movieData.title} `}\n  //             style={{\n  //               marginTop: '40px',\n  //               marginRight: '40px',\n  //               marginBottom: '40px'\n  //             }} />\n  //           <Stack>\n  //             <h1 style={{ fontSize: 64 }}>{movieData.title}</h1>\n  //             <h2>Released: {formatReleaseDate(movieData.year)}</h2>\n  //           </Stack>\n  //         </Stack>\n  //       </Container>\n  //   );\n  // }\n  return (\n    <Container>\n      <div style={{ margin: '2%' }}>\n        <Card sx={styles.cardContainer}>\n          <CardMedia\n            component=\"img\"\n            sx={styles.cardMedia}\n            image={movieData.poster_url}\n          />\n          <CardContent sx={styles.cardContent}>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              <a href={`/movies/${movieData.imdb_title_id}`}>{movieData.title}</a>\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontSize: 16 }}>\n              Release year: {movieData.year}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontSize: 16 }}>\n              Duration: {movieData.duration} minutes\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontSize: 16 }}>\n              Director: {movieData.director_name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontSize: 16 }}>\n              Oscar Nominations: {movieData.num_nominations}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '16px' }}>\n              {movieData.description}\n            </Typography>\n          </CardContent>\n          {/* <CardActions>\n        <Button size=\"small\">Share</Button>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions> */}\n        </Card>\n      </div>\n    </Container>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}