{"ast":null,"code":"var _jsxFileName = \"/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/MoviesInfoPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport SongCard from '../components/SongCard';\nimport { formatDuration, formatReleaseDate } from '../helpers/formatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function MovieInfoPage() {\n  _s();\n  // const { movie_id } = useParams();\n  const movie_id = 'tt0111161';\n\n  // const [songData, setSongData] = useState([{}]); // default should actually just be [], but empty object element added to avoid error in template code\n  const [movieData, setMovieData] = useState([]);\n  const [moviePeople, setMoviePeople] = useState([{}]);\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/movies/${movie_id}`).then(res => res.json()).then(resJson => {\n      console.log('Movie data:', resJson);\n      setMovieData(resJson);\n    });\n    fetch(`http://${config.server_host}:${config.server_port}/movie_people/${movie_id}`).then(res => res.json()).then(resJson => setMoviePeople(resJson));\n  }, [movie_id]);\n\n  //   return (\n  //     <Container>\n  //         {/* {selectedSongId && <SongCard songId={selectedSongId} handleClose={() => setSelectedSongId(null)} />} */}\n  //         <Stack direction='row' justify='center'>\n  //           <img\n  //             key={movieData.imdb_title_id}\n  //             src={movieData.poster_url}\n  //             alt={`${movieData.title} `}\n  //             style={{\n  //               marginTop: '40px',\n  //               marginRight: '40px',\n  //               marginBottom: '40px'\n  //             }} />\n  //           <Stack>\n  //             <h1 style={{ fontSize: 64 }}>{movieData.title}</h1>\n  //             <h2>Released: {formatReleaseDate(movieData.year)}</h2>\n  //           </Stack>\n  //         </Stack>\n  //       </Container>\n  //   );\n  // }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '2%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: styles.cardContainer,\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          sx: styles.cardMedia,\n          image: movieData.poster_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: styles.cardContent,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"div\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/movies/${movieData.imdb_title_id}`,\n              children: movieData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            sx: {\n              fontSize: 16\n            },\n            children: [\"Release year: \", movieData.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            sx: {\n              fontSize: 16\n            },\n            children: [\"Duration: \", movieData.duration, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            sx: {\n              fontSize: 16\n            },\n            children: [\"Director: \", movieData.director_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.primary\",\n            sx: {\n              fontSize: 16\n            },\n            children: [\"Oscar Nominations: \", movieData.num_nominations]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            style: {\n              marginTop: '16px'\n            },\n            children: movieData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieInfoPage, \"c3qgrnnb8nSMIUrCNU9raT9sjJc=\");\n_c = MovieInfoPage;\nvar _c;\n$RefreshReg$(_c, \"MovieInfoPage\");","map":{"version":3,"names":["useEffect","useState","useParams","Container","Link","Stack","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","SongCard","formatDuration","formatReleaseDate","config","require","MovieInfoPage","movie_id","movieData","setMovieData","moviePeople","setMoviePeople","fetch","server_host","server_port","then","res","json","resJson","console","log","margin","styles","cardContainer","cardMedia","poster_url","cardContent","imdb_title_id","title","fontSize","year","duration","director_name","num_nominations","marginTop","description"],"sources":["/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/MoviesInfoPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\n\nimport SongCard from '../components/SongCard';\nimport { formatDuration, formatReleaseDate } from '../helpers/formatter';\nconst config = require('../config.json');\n\nexport default function MovieInfoPage() {\n  // const { movie_id } = useParams();\n  const movie_id = 'tt0111161';\n\n  // const [songData, setSongData] = useState([{}]); // default should actually just be [], but empty object element added to avoid error in template code\n  const [movieData, setMovieData] = useState([]);\n  const [moviePeople, setMoviePeople] = useState([{}]);\n\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/movies/${movie_id}`)\n      .then(res => res.json())\n      .then(resJson => {\n        console.log('Movie data:', resJson);\n        setMovieData(resJson);\n      });\n\n    fetch(`http://${config.server_host}:${config.server_port}/movie_people/${movie_id}`)\n      .then(res => res.json())\n      .then(resJson => setMoviePeople(resJson));\n  }, [movie_id]);\n\n  //   return (\n  //     <Container>\n  //         {/* {selectedSongId && <SongCard songId={selectedSongId} handleClose={() => setSelectedSongId(null)} />} */}\n  //         <Stack direction='row' justify='center'>\n  //           <img\n  //             key={movieData.imdb_title_id}\n  //             src={movieData.poster_url}\n  //             alt={`${movieData.title} `}\n  //             style={{\n  //               marginTop: '40px',\n  //               marginRight: '40px',\n  //               marginBottom: '40px'\n  //             }} />\n  //           <Stack>\n  //             <h1 style={{ fontSize: 64 }}>{movieData.title}</h1>\n  //             <h2>Released: {formatReleaseDate(movieData.year)}</h2>\n  //           </Stack>\n  //         </Stack>\n  //       </Container>\n  //   );\n  // }\n  return (\n    <Container>\n      <div style={{ margin: '2%' }}>\n        <Card sx={styles.cardContainer}>\n          <CardMedia\n            component=\"img\"\n            sx={styles.cardMedia}\n            image={movieData.poster_url}\n          />\n          <CardContent sx={styles.cardContent}>\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\n              <a href={`/movies/${movieData.imdb_title_id}`}>{movieData.title}</a>\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontSize: 16 }}>\n              Release year: {movieData.year}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontSize: 16 }}>\n              Duration: {movieData.duration} minutes\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontSize: 16 }}>\n              Director: {movieData.director_name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.primary\" sx={{ fontSize: 16 }}>\n              Oscar Nominations: {movieData.num_nominations}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" style={{ marginTop: '16px' }}>\n              {movieData.description}\n            </Typography>\n          </CardContent>\n          {/* <CardActions>\n        <Button size=\"small\">Share</Button>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions> */}\n        </Card>\n      </div>\n    </Container>\n  );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AAExH,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,sBAAsB;AAAC;AACzE,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAExC,eAAe,SAASC,aAAa,GAAG;EAAA;EACtC;EACA,MAAMC,QAAQ,GAAG,WAAW;;EAE5B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACduB,KAAK,CAAE,UAASR,MAAM,CAACS,WAAY,IAAGT,MAAM,CAACU,WAAY,WAAUP,QAAS,EAAC,CAAC,CAC3EQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAI;MACfC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,OAAO,CAAC;MACnCT,YAAY,CAACS,OAAO,CAAC;IACvB,CAAC,CAAC;IAEJN,KAAK,CAAE,UAASR,MAAM,CAACS,WAAY,IAAGT,MAAM,CAACU,WAAY,iBAAgBP,QAAS,EAAC,CAAC,CACjFQ,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAIP,cAAc,CAACO,OAAO,CAAC,CAAC;EAC7C,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACE,QAAC,SAAS;IAAA,uBACR;MAAK,KAAK,EAAE;QAAEc,MAAM,EAAE;MAAK,CAAE;MAAA,uBAC3B,QAAC,IAAI;QAAC,EAAE,EAAEC,MAAM,CAACC,aAAc;QAAA,wBAC7B,QAAC,SAAS;UACR,SAAS,EAAC,KAAK;UACf,EAAE,EAAED,MAAM,CAACE,SAAU;UACrB,KAAK,EAAEhB,SAAS,CAACiB;QAAW;UAAA;UAAA;UAAA;QAAA,QAC5B,eACF,QAAC,WAAW;UAAC,EAAE,EAAEH,MAAM,CAACI,WAAY;UAAA,wBAClC,QAAC,UAAU;YAAC,YAAY;YAAC,OAAO,EAAC,IAAI;YAAC,SAAS,EAAC,KAAK;YAAA,uBACnD;cAAG,IAAI,EAAG,WAAUlB,SAAS,CAACmB,aAAc,EAAE;cAAA,UAAEnB,SAAS,CAACoB;YAAK;cAAA;cAAA;cAAA;YAAA;UAAK;YAAA;YAAA;YAAA;UAAA,QACzD,eACb,QAAC,UAAU;YAAC,OAAO,EAAC,OAAO;YAAC,KAAK,EAAC,cAAc;YAAC,EAAE,EAAE;cAAEC,QAAQ,EAAE;YAAG,CAAE;YAAA,WAAC,gBACvD,EAACrB,SAAS,CAACsB,IAAI;UAAA;YAAA;YAAA;YAAA;UAAA,QAClB,eACb,QAAC,UAAU;YAAC,OAAO,EAAC,OAAO;YAAC,KAAK,EAAC,cAAc;YAAC,EAAE,EAAE;cAAED,QAAQ,EAAE;YAAG,CAAE;YAAA,WAAC,YAC3D,EAACrB,SAAS,CAACuB,QAAQ,EAAC,UAChC;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eACb,QAAC,UAAU;YAAC,OAAO,EAAC,OAAO;YAAC,KAAK,EAAC,cAAc;YAAC,EAAE,EAAE;cAAEF,QAAQ,EAAE;YAAG,CAAE;YAAA,WAAC,YAC3D,EAACrB,SAAS,CAACwB,aAAa;UAAA;YAAA;YAAA;YAAA;UAAA,QACvB,eACb,QAAC,UAAU;YAAC,OAAO,EAAC,OAAO;YAAC,KAAK,EAAC,cAAc;YAAC,EAAE,EAAE;cAAEH,QAAQ,EAAE;YAAG,CAAE;YAAA,WAAC,qBAClD,EAACrB,SAAS,CAACyB,eAAe;UAAA;YAAA;YAAA;YAAA;UAAA,QAClC,eACb,QAAC,UAAU;YAAC,OAAO,EAAC,OAAO;YAAC,KAAK,EAAC,gBAAgB;YAAC,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAA,UAC7E1B,SAAS,CAAC2B;UAAW;YAAA;YAAA;YAAA;UAAA,QACX;QAAA;UAAA;UAAA;UAAA;QAAA,QACD;MAAA;QAAA;QAAA;QAAA;MAAA;IAKT;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACI;AAEhB;AAAC,GA/EuB7B,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}