{"ast":null,"code":"var _jsxFileName = \"/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/OscarPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Button, Checkbox, Container, FormControlLabel, Grid, Link, Slider, TextField } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { NavLink } from 'react-router-dom';\nimport { link } from 'react-router-dom';\nimport i1940 from '../images/1940.jpg';\nimport i1949 from '../images/1949.jpg';\nimport i1955 from '../images/1955.jpg';\nimport i1974 from '../images/1974.jpg';\nimport i1982 from '../images/1982.jpg';\nimport i1995 from '../images/1995.jpg';\nimport i2010 from '../images/2010.jpg';\nimport i2023 from '../images/2023.jpg';\nimport image1 from '../images/tt1.jpg';\nimport image2 from '../images/i2.jpg';\nimport rita from '../images/rita.jpg';\nimport image6 from '../images/z1.jpg';\nimport image7 from '../images/z2.jpg';\nimport image8 from '../images/i6.jpg';\nimport a2 from '../images/a2.png';\nimport a3 from '../images/a3.jpg';\nimport a5 from '../images/a5.jpg';\nimport a6 from '../images/a6.jpg';\nimport a7 from '../images/a8.jpg';\nimport a9 from '../images/a11.jpg';\nimport a10 from '../images/a12.jpg';\nimport SongCard from '../components/SongCard';\nimport { formatDuration } from '../helpers/formatter';\nimport ImageSliders from '../components/ImageSlider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function OscarPage() {\n  _s();\n  const [pageSize, setPageSize] = useState(10);\n  const [data, setData] = useState([]);\n  const [year, setYear] = useState('');\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/search_won`).then(res => res.json()).then(resJson => {\n      const moviesWithId = resJson.map(movie => ({\n        id: `${movie.imdb_title_id}-${movie.year}-${movie.category}-${movie.name}`,\n        ...movie\n      }));\n      setData(moviesWithId);\n    });\n  }, []);\n\n  // const search = () => {\n  //   fetch(`http://${config.server_host}:${config.server_port}/search_oscar_filter?title=${title}` +\n  //     `&language=${language}` +\n  //     `&duration_low=${duration[0]}&duration_high=${duration[1]}}`\n  //   )\n\n  const search = () => {\n    fetch(`http://${config.server_host}:${config.server_port}/search_won?year=${year}`)\n    // `&language=${language}` +\n    // `&country=${country}`)\n    .then(res => res.json()).then(resJson => {\n      const moviesWithId = resJson.map(movie => ({\n        id: `${movie.imdb_title_id}-${movie.year}-${movie.category}-${movie.name}`,\n        ...movie\n      }));\n      setData(moviesWithId);\n    });\n  };\n\n  // This defines the columns of the table of songs used by the DataGrid component.\n  // The format of the columns array and the DataGrid component itself is very similar to our\n  // LazyTable component. The big difference is we provide all data to the DataGrid component\n  // instead of loading only the data we need (which is necessary in order to be able to sort by column)\n  // M.title, M.year, M.country, M.language, O.category, O.winner\n  const columns = [{\n    field: 'year',\n    headerName: 'Year'\n  }, {\n    field: 'category',\n    headerName: 'Category',\n    width: 300\n  }, {\n    field: 'title',\n    headerName: 'Title',\n    width: 300,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `/movies/${params.row.imdb_title_id}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: 'name',\n    headerName: 'Name',\n    width: 250\n  }, {\n    field: 'avg_vote',\n    headerName: 'Rating'\n  }, {\n    field: 'winner',\n    headerName: 'Win'\n  }];\n  const slides = [\n  // {url:image1, title:\"non\"},\n  {\n    url: a2,\n    title: \"The ceremony for the first-ever Academy Awards was held in 1929 in the Blossom Room of the Hollywood Roosevelt Hotel in Hollywood, California.\"\n  }, {\n    url: a3,\n    title: \"There were only 270 guests at the first Academy Awards, and tickets cost just $5, which is about $87 today, adjusted for inflation.\"\n  },\n  // {url:i9, title:\"The original design of the Oscar was realized by MGM art director Cedric Gibbons. He came up with a statuette of a knight standing on a reel of film gripping a crusader’s sword. The Academy commissioned the Los Angeles sculptor George Stanley to create the design in three dimensions, based on actor Emilio Fernandez.\"},\n  {\n    url: a5,\n    title: \"With Douglas Fairbanks, William C. deMille co-hosted the 1st Academy Awards in 1929, and the ceremony lasted just 15 minutes.\"\n  }, {\n    url: a6,\n    title: \"Today, the typical ceremony looks very different, with around 3,400 attendees and 24 categories.\"\n  }, {\n    url: a7,\n    title: \"However, due to the coronavirus pandemic, the 2021 event was even smaller than the first ceremony back in 1929.\"\n  }, {\n    url: a10,\n    title: \"MGM art director Cedric Gibbons designed a statuette of a knight standing on a reel of film gripping a crusader’s sword. The Academy tapped Los Angeles sculptor George Stanley to realize the design in three dimensions and the world renowned statuette was born.\"\n  }, {\n    url: a9,\n    title: \"The Academy says the first statuettes were made from gold-plated solid bronze but then switched over to Britannia metal. During a metal shortage in World War II, the statuettes were made of painted plaster for at least three years. After the war, the plaster was exchanged for gold-plated metal, which is how we know the Oscar statuette today.\"\n  }];\n  const slides2 = [{\n    url: image1,\n    title: \"Janet Gaynor: The First Woman To Win The Academy Award For Best Actress in 1929.\"\n  }, {\n    url: i1940,\n    title: \"Best Film Editing: Anne Bauchens (North West Mounted Police, 1940)\"\n  }, {\n    url: i1949,\n    title: \"Best Costume Design: Dorothy Jeakins Karinska (Joan of Arc, 1948)\"\n  }, {\n    url: i1955,\n    title: \"Best Documentary Feature: Nancy Hamilton (Helen Keller in Her Story, 1955)\"\n  }, {\n    url: image2,\n    title: \"In 1983, Buffy Sainte-Marie became the first Indigenous person to win an Oscar for Best Original Song.\"\n  }, {\n    url: rita,\n    title: \"In 1962, Rita Moreno became the first Latina woman to win an Oscar.\"\n  }, {\n    url: i1974,\n    title: \"Julia Phillips was the first female producer to win an Oscar for best picture. She won for The Sting in 1973.\"\n  }, {\n    url: i1982,\n    title: \"Best Makeup and Hairstyling Sarah Monzani and Michèle Burke (Quest for Fire, 1982)\"\n  }, {\n    url: i1995,\n    title: \"Marleen Gorris is the first woman to win Best Foreign Language Film. She won for ANTONIA'S LINE at the 68th Academy Awards.\"\n  }, {\n    url: image6,\n    title: \"In 1985, Kay Rose won an Oscar for best sound editing — the first woman to do so.\"\n  }, {\n    url: image7,\n    title: \"Halle Berry remains the only Black woman to win an Academy Award for best actress in 2002.\"\n  }, {\n    url: i2010,\n    title: \"Best Sound: Lora Hirschberg (Inception, 2010)\"\n  }, {\n    url: image8,\n    title: \"Kathryn Bigelow became the first woman ever to win best director. She won in 2010 for The Hurt Locker.\"\n  }, {\n    url: i2023,\n    title: \" Michelle Yeoh would make history as the first woman of Asian descent to win a best actress Oscar in 2023.\"\n  }];\n  const titleStyle = {\n    color: \"red\",\n    fontSize: \"2rem\",\n    textAlign: \"center\",\n    margin: \"1rem 0\"\n  };\n\n  // This component makes uses of the Grid component from MUI (https://mui.com/material-ui/react-grid/).\n  // The Grid component is super simple way to create a page layout. Simply make a <Grid container> tag\n  // (optionally has spacing prop that specifies the distance between grid items). Then, enclose whatever\n  // component you want in a <Grid item xs={}> tag where xs is a number between 1 and 12. Each row of the\n  // grid is 12 units wide and the xs attribute specifies how many units the grid item is. So if you want\n  // two grid items of the same size on the same row, define two grid items with xs={6}. The Grid container\n  // will automatically lay out all the grid items into rows based on their xs values.\n  const containerStyles = {\n    width: '1500px',\n    height: '300px',\n    margin: '0 auto'\n  };\n  const containerStyles2 = {\n    width: '1500px',\n    height: '350px',\n    margin: '0 auto'\n  };\n\n  // const bodyStyle = {\n  //   backgroundColor: \"black\",\n  //   color: \"red\"\n  // };\n\n  const searchContainerStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '100px',\n    width: '100%',\n    maxWidth: '600px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: containerStyles,\n        children: /*#__PURE__*/_jsxDEV(ImageSliders, {\n          slides: slides,\n          parentWidth: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '100px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          style: {\n            marginLeft: '250px'\n          },\n          alignItems: \"center\",\n          direction: \"row\",\n          justify: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Year\",\n              value: year,\n              onChange: e => setYear(e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            style: {\n              marginTop: '20px',\n              marginLeft: '5px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: () => search(),\n              style: {\n                marginTop: '10px'\n              },\n              fullWidth: true,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: data,\n        columns: columns,\n        pageSize: pageSize,\n        rowsPerPageOptions: [5, 10, 25],\n        onPageSizeChange: newPageSize => setPageSize(newPageSize),\n        autoHeight: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: containerStyles2,\n        children: /*#__PURE__*/_jsxDEV(ImageSliders, {\n          slides: slides2,\n          parentWidth: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(OscarPage, \"6L0yIilHN0CQF44pif9LmaU7DuY=\");\n_c = OscarPage;\nvar _c;\n$RefreshReg$(_c, \"OscarPage\");","map":{"version":3,"names":["useEffect","useState","Button","Checkbox","Container","FormControlLabel","Grid","Link","Slider","TextField","DataGrid","NavLink","link","i1940","i1949","i1955","i1974","i1982","i1995","i2010","i2023","image1","image2","rita","image6","image7","image8","a2","a3","a5","a6","a7","a9","a10","SongCard","formatDuration","ImageSliders","config","require","OscarPage","pageSize","setPageSize","data","setData","year","setYear","fetch","server_host","server_port","then","res","json","resJson","moviesWithId","map","movie","id","imdb_title_id","category","name","search","columns","field","headerName","width","renderCell","params","row","value","slides","url","title","slides2","titleStyle","color","fontSize","textAlign","margin","containerStyles","height","containerStyles2","searchContainerStyles","display","alignItems","justifyContent","marginTop","maxWidth","marginLeft","e","target","newPageSize"],"sources":["/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/OscarPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Button, Checkbox, Container, FormControlLabel, Grid, Link, Slider, TextField } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { NavLink } from 'react-router-dom';\nimport { link } from 'react-router-dom';\n\nimport i1940 from '../images/1940.jpg';\nimport i1949 from '../images/1949.jpg';\nimport i1955 from '../images/1955.jpg';\nimport i1974 from '../images/1974.jpg';\nimport i1982 from '../images/1982.jpg';\nimport i1995 from '../images/1995.jpg';\nimport i2010 from '../images/2010.jpg';\nimport i2023 from '../images/2023.jpg';\nimport image1 from '../images/tt1.jpg';\nimport image2 from '../images/i2.jpg';\nimport rita from '../images/rita.jpg';\n\nimport image6 from '../images/z1.jpg';\nimport image7 from '../images/z2.jpg';\nimport image8 from '../images/i6.jpg';\n\nimport a2 from '../images/a2.png';\nimport a3 from '../images/a3.jpg';\nimport a5 from '../images/a5.jpg';\nimport a6 from '../images/a6.jpg';\nimport a7 from '../images/a8.jpg';\nimport a9 from '../images/a11.jpg';\nimport a10 from '../images/a12.jpg';\n\nimport SongCard from '../components/SongCard';\nimport { formatDuration } from '../helpers/formatter';\nimport ImageSliders from '../components/ImageSlider';\nconst config = require('../config.json');\n\nexport default function OscarPage() {\n  const [pageSize, setPageSize] = useState(10);\n  const [data, setData] = useState([]);\n  const [year, setYear] = useState('');\n\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/search_won`)\n      .then(res => res.json())\n      .then(resJson => {\n        const moviesWithId = resJson.map((movie) => ({\n          id: `${movie.imdb_title_id}-${movie.year}-${movie.category}-${movie.name}`,\n          ...movie\n        }));\n        setData(moviesWithId);\n      });\n  }, []);\n\n\n  // const search = () => {\n  //   fetch(`http://${config.server_host}:${config.server_port}/search_oscar_filter?title=${title}` +\n  //     `&language=${language}` +\n  //     `&duration_low=${duration[0]}&duration_high=${duration[1]}}`\n  //   )\n\n  const search = () => {\n    fetch(`http://${config.server_host}:${config.server_port}/search_won?year=${year}`)\n      // `&language=${language}` +\n      // `&country=${country}`)\n      .then(res => res.json())\n      .then(resJson => {\n        const moviesWithId = resJson.map((movie) => ({\n          id: `${movie.imdb_title_id}-${movie.year}-${movie.category}-${movie.name}`,\n          ...movie\n        }));\n        setData(moviesWithId);\n      });\n  }\n\n  // This defines the columns of the table of songs used by the DataGrid component.\n  // The format of the columns array and the DataGrid component itself is very similar to our\n  // LazyTable component. The big difference is we provide all data to the DataGrid component\n  // instead of loading only the data we need (which is necessary in order to be able to sort by column)\n  // M.title, M.year, M.country, M.language, O.category, O.winner\n  const columns = [\n    { field: 'year', headerName: 'Year' },\n    { field: 'category', headerName: 'Category', width: 300 },\n    {\n      field: 'title',\n      headerName: 'Title',\n      width: 300,\n      renderCell: (params) => (\n        <a href={`/movies/${params.row.imdb_title_id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n          {params.value}\n        </a>\n      ),\n    },\n    { field: 'name', headerName: 'Name', width: 250 },\n\n    { field: 'avg_vote', headerName: 'Rating' },\n    { field: 'winner', headerName: 'Win' },\n  ]\n\n  const slides = [\n    // {url:image1, title:\"non\"},\n    { url: a2, title: \"The ceremony for the first-ever Academy Awards was held in 1929 in the Blossom Room of the Hollywood Roosevelt Hotel in Hollywood, California.\" },\n    { url: a3, title: \"There were only 270 guests at the first Academy Awards, and tickets cost just $5, which is about $87 today, adjusted for inflation.\" },\n    // {url:i9, title:\"The original design of the Oscar was realized by MGM art director Cedric Gibbons. He came up with a statuette of a knight standing on a reel of film gripping a crusader’s sword. The Academy commissioned the Los Angeles sculptor George Stanley to create the design in three dimensions, based on actor Emilio Fernandez.\"},\n    { url: a5, title: \"With Douglas Fairbanks, William C. deMille co-hosted the 1st Academy Awards in 1929, and the ceremony lasted just 15 minutes.\" },\n    { url: a6, title: \"Today, the typical ceremony looks very different, with around 3,400 attendees and 24 categories.\" },\n    { url: a7, title: \"However, due to the coronavirus pandemic, the 2021 event was even smaller than the first ceremony back in 1929.\" },\n    { url: a10, title: \"MGM art director Cedric Gibbons designed a statuette of a knight standing on a reel of film gripping a crusader’s sword. The Academy tapped Los Angeles sculptor George Stanley to realize the design in three dimensions and the world renowned statuette was born.\" },\n    { url: a9, title: \"The Academy says the first statuettes were made from gold-plated solid bronze but then switched over to Britannia metal. During a metal shortage in World War II, the statuettes were made of painted plaster for at least three years. After the war, the plaster was exchanged for gold-plated metal, which is how we know the Oscar statuette today.\" }\n  ]\n\n  const slides2 = [\n    { url: image1, title: \"Janet Gaynor: The First Woman To Win The Academy Award For Best Actress in 1929.\" },\n    { url: i1940, title: \"Best Film Editing: Anne Bauchens (North West Mounted Police, 1940)\" },\n    { url: i1949, title: \"Best Costume Design: Dorothy Jeakins Karinska (Joan of Arc, 1948)\" },\n    { url: i1955, title: \"Best Documentary Feature: Nancy Hamilton (Helen Keller in Her Story, 1955)\" },\n    { url: image2, title: \"In 1983, Buffy Sainte-Marie became the first Indigenous person to win an Oscar for Best Original Song.\" },\n    { url: rita, title: \"In 1962, Rita Moreno became the first Latina woman to win an Oscar.\" },\n    { url: i1974, title: \"Julia Phillips was the first female producer to win an Oscar for best picture. She won for The Sting in 1973.\" },\n    { url: i1982, title: \"Best Makeup and Hairstyling Sarah Monzani and Michèle Burke (Quest for Fire, 1982)\" },\n    { url: i1995, title: \"Marleen Gorris is the first woman to win Best Foreign Language Film. She won for ANTONIA'S LINE at the 68th Academy Awards.\" },\n    { url: image6, title: \"In 1985, Kay Rose won an Oscar for best sound editing — the first woman to do so.\" },\n    { url: image7, title: \"Halle Berry remains the only Black woman to win an Academy Award for best actress in 2002.\" },\n    { url: i2010, title: \"Best Sound: Lora Hirschberg (Inception, 2010)\" },\n    { url: image8, title: \"Kathryn Bigelow became the first woman ever to win best director. She won in 2010 for The Hurt Locker.\" },\n    { url: i2023, title: \" Michelle Yeoh would make history as the first woman of Asian descent to win a best actress Oscar in 2023.\" }]\n\n\n\n  const titleStyle = {\n    color: \"red\",\n    fontSize: \"2rem\",\n    textAlign: \"center\",\n    margin: \"1rem 0\",\n  };\n\n  // This component makes uses of the Grid component from MUI (https://mui.com/material-ui/react-grid/).\n  // The Grid component is super simple way to create a page layout. Simply make a <Grid container> tag\n  // (optionally has spacing prop that specifies the distance between grid items). Then, enclose whatever\n  // component you want in a <Grid item xs={}> tag where xs is a number between 1 and 12. Each row of the\n  // grid is 12 units wide and the xs attribute specifies how many units the grid item is. So if you want\n  // two grid items of the same size on the same row, define two grid items with xs={6}. The Grid container\n  // will automatically lay out all the grid items into rows based on their xs values.\n  const containerStyles = {\n    width: '1500px',\n    height: '300px',\n    margin: '0 auto',\n  };\n\n  const containerStyles2 = {\n    width: '1500px',\n    height: '350px',\n    margin: '0 auto',\n  };\n\n  // const bodyStyle = {\n  //   backgroundColor: \"black\",\n  //   color: \"red\"\n  // };\n\n  const searchContainerStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: '100px',\n    width: '100%',\n    maxWidth: '600px'\n  };\n\n  return (\n\n    <body >\n      <div>\n        <h1></h1>\n        <div style={containerStyles}>\n          <ImageSliders slides={slides} parentWidth={500} />\n        </div>\n\n      </div >\n\n      <Container>\n        <div style={{ marginTop: '100px' }}>\n          {/* <h2>Search Movie</h2> */}\n          <Grid container spacing={2} style={{ marginLeft: '250px' }} alignItems=\"center\" direction=\"row\" justify=\"center\">\n            <Grid item xs={4}>\n              <TextField label=\"Year\" value={year} onChange={(e) => setYear(e.target.value)} fullWidth />\n            </Grid>\n            <Grid item xs={2} style={{ marginTop: '20px', marginLeft: '5px' }}>\n              <Button variant=\"outlined\" onClick={() => search()} style={{ marginTop: '10px' }} fullWidth>\n                Search\n              </Button>\n            </Grid>\n          </Grid>\n          {/* <Grid container spacing={2} style={{ marginLeft: '250px' }} alignItems=\"centerContent\" direction=\"row\" justify=\"center\">\n            <Grid item xs={4}>\n              <TextField label=\"Year\" value={year} onChange={(e) => setYear(e.target.value)} fullWidth />\n            </Grid>\n            <Grid item xs={2} style={{ marginTop: '20px', marginLeft: '5px' }}>\n              <Button variant=\"outlined\" onClick={() => search()} fullWidth>\n                Search\n              </Button>\n            </Grid>\n          </Grid> */}\n        </div>\n\n        {/* <Button onClick={() => search()} style={{ left: '50%', transform: 'translateX(-50%)' }}>\n        Search\n      </Button> */}\n        <h1> </h1>\n\n        {/* Notice how similar the DataGrid component is to our LazyTable! What are the differences? */}\n        <DataGrid\n          rows={data}\n          columns={columns}\n          pageSize={pageSize}\n          rowsPerPageOptions={[5, 10, 25]}\n          onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\n          autoHeight\n        />\n      </Container>\n\n      <div>\n        <h1></h1>\n        <div style={containerStyles2}>\n          <ImageSliders slides={slides2} parentWidth={500} />\n        </div>\n\n      </div>\n\n    </body>\n\n  );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,IAAI,EAAEC,IAAI,EAAEC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AAC5G,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AAErC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,MAAM,MAAM,kBAAkB;AAErC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,EAAE,MAAM,mBAAmB;AAClC,OAAOC,GAAG,MAAM,mBAAmB;AAEnC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,cAAc,QAAQ,sBAAsB;AACrD,OAAOC,YAAY,MAAM,2BAA2B;AAAC;AACrD,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAExC,eAAe,SAASC,SAAS,GAAG;EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyC,IAAI,EAAEC,OAAO,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC2C,IAAI,EAAEC,OAAO,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd8C,KAAK,CAAE,UAAST,MAAM,CAACU,WAAY,IAAGV,MAAM,CAACW,WAAY,aAAY,CAAC,CACnEC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAI;MACf,MAAMC,YAAY,GAAGD,OAAO,CAACE,GAAG,CAAEC,KAAK,KAAM;QAC3CC,EAAE,EAAG,GAAED,KAAK,CAACE,aAAc,IAAGF,KAAK,CAACX,IAAK,IAAGW,KAAK,CAACG,QAAS,IAAGH,KAAK,CAACI,IAAK,EAAC;QAC1E,GAAGJ;MACL,CAAC,CAAC,CAAC;MACHZ,OAAO,CAACU,YAAY,CAAC;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA;EACA;EACA;EACA;;EAEA,MAAMO,MAAM,GAAG,MAAM;IACnBd,KAAK,CAAE,UAAST,MAAM,CAACU,WAAY,IAAGV,MAAM,CAACW,WAAY,oBAAmBJ,IAAK,EAAC;IAChF;IACA;IAAA,CACCK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAI;MACf,MAAMC,YAAY,GAAGD,OAAO,CAACE,GAAG,CAAEC,KAAK,KAAM;QAC3CC,EAAE,EAAG,GAAED,KAAK,CAACE,aAAc,IAAGF,KAAK,CAACX,IAAK,IAAGW,KAAK,CAACG,QAAS,IAAGH,KAAK,CAACI,IAAK,EAAC;QAC1E,GAAGJ;MACL,CAAC,CAAC,CAAC;MACHZ,OAAO,CAACU,YAAY,CAAC;IACvB,CAAC,CAAC;EACN,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA,MAAMQ,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE;EAAO,CAAC,EACrC;IAAED,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAI,CAAC,EACzD;IACEF,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,OAAO;IACnBC,KAAK,EAAE,GAAG;IACVC,UAAU,EAAGC,MAAM,iBACjB;MAAG,IAAI,EAAG,WAAUA,MAAM,CAACC,GAAG,CAACV,aAAc,EAAE;MAAC,MAAM,EAAC,QAAQ;MAAC,GAAG,EAAC,qBAAqB;MAAA,UACtFS,MAAM,CAACE;IAAK;MAAA;MAAA;MAAA;IAAA;EAGnB,CAAC,EACD;IAAEN,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,EAEjD;IAAEF,KAAK,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAS,CAAC,EAC3C;IAAED,KAAK,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAM,CAAC,CACvC;EAED,MAAMM,MAAM,GAAG;EACb;EACA;IAAEC,GAAG,EAAE3C,EAAE;IAAE4C,KAAK,EAAE;EAAiJ,CAAC,EACpK;IAAED,GAAG,EAAE1C,EAAE;IAAE2C,KAAK,EAAE;EAAsI,CAAC;EACzJ;EACA;IAAED,GAAG,EAAEzC,EAAE;IAAE0C,KAAK,EAAE;EAAgI,CAAC,EACnJ;IAAED,GAAG,EAAExC,EAAE;IAAEyC,KAAK,EAAE;EAAmG,CAAC,EACtH;IAAED,GAAG,EAAEvC,EAAE;IAAEwC,KAAK,EAAE;EAAkH,CAAC,EACrI;IAAED,GAAG,EAAErC,GAAG;IAAEsC,KAAK,EAAE;EAAuQ,CAAC,EAC3R;IAAED,GAAG,EAAEtC,EAAE;IAAEuC,KAAK,EAAE;EAA0V,CAAC,CAC9W;EAED,MAAMC,OAAO,GAAG,CACd;IAAEF,GAAG,EAAEjD,MAAM;IAAEkD,KAAK,EAAE;EAAmF,CAAC,EAC1G;IAAED,GAAG,EAAEzD,KAAK;IAAE0D,KAAK,EAAE;EAAqE,CAAC,EAC3F;IAAED,GAAG,EAAExD,KAAK;IAAEyD,KAAK,EAAE;EAAoE,CAAC,EAC1F;IAAED,GAAG,EAAEvD,KAAK;IAAEwD,KAAK,EAAE;EAA6E,CAAC,EACnG;IAAED,GAAG,EAAEhD,MAAM;IAAEiD,KAAK,EAAE;EAAyG,CAAC,EAChI;IAAED,GAAG,EAAE/C,IAAI;IAAEgD,KAAK,EAAE;EAAsE,CAAC,EAC3F;IAAED,GAAG,EAAEtD,KAAK;IAAEuD,KAAK,EAAE;EAAgH,CAAC,EACtI;IAAED,GAAG,EAAErD,KAAK;IAAEsD,KAAK,EAAE;EAAqF,CAAC,EAC3G;IAAED,GAAG,EAAEpD,KAAK;IAAEqD,KAAK,EAAE;EAA8H,CAAC,EACpJ;IAAED,GAAG,EAAE9C,MAAM;IAAE+C,KAAK,EAAE;EAAoF,CAAC,EAC3G;IAAED,GAAG,EAAE7C,MAAM;IAAE8C,KAAK,EAAE;EAA6F,CAAC,EACpH;IAAED,GAAG,EAAEnD,KAAK;IAAEoD,KAAK,EAAE;EAAgD,CAAC,EACtE;IAAED,GAAG,EAAE5C,MAAM;IAAE6C,KAAK,EAAE;EAAyG,CAAC,EAChI;IAAED,GAAG,EAAElD,KAAK;IAAEmD,KAAK,EAAE;EAA6G,CAAC,CAAC;EAItI,MAAME,UAAU,GAAG;IACjBC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE;EACV,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,eAAe,GAAG;IACtBd,KAAK,EAAE,QAAQ;IACfe,MAAM,EAAE,OAAO;IACfF,MAAM,EAAE;EACV,CAAC;EAED,MAAMG,gBAAgB,GAAG;IACvBhB,KAAK,EAAE,QAAQ;IACfe,MAAM,EAAE,OAAO;IACfF,MAAM,EAAE;EACV,CAAC;;EAED;EACA;EACA;EACA;;EAEA,MAAMI,qBAAqB,GAAG;IAC5BC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE,OAAO;IAClBrB,KAAK,EAAE,MAAM;IACbsB,QAAQ,EAAE;EACZ,CAAC;EAED,oBAEE;IAAA,wBACE;MAAA,wBACE;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAK,KAAK,EAAER,eAAgB;QAAA,uBAC1B,QAAC,YAAY;UAAC,MAAM,EAAET,MAAO;UAAC,WAAW,EAAE;QAAI;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC9C;IAAA;MAAA;MAAA;MAAA;IAAA,QAED,eAEP,QAAC,SAAS;MAAA,wBACR;QAAK,KAAK,EAAE;UAAEgB,SAAS,EAAE;QAAQ,CAAE;QAAA,uBAEjC,QAAC,IAAI;UAAC,SAAS;UAAC,OAAO,EAAE,CAAE;UAAC,KAAK,EAAE;YAAEE,UAAU,EAAE;UAAQ,CAAE;UAAC,UAAU,EAAC,QAAQ;UAAC,SAAS,EAAC,KAAK;UAAC,OAAO,EAAC,QAAQ;UAAA,wBAC9G,QAAC,IAAI;YAAC,IAAI;YAAC,EAAE,EAAE,CAAE;YAAA,uBACf,QAAC,SAAS;cAAC,KAAK,EAAC,MAAM;cAAC,KAAK,EAAE3C,IAAK;cAAC,QAAQ,EAAG4C,CAAC,IAAK3C,OAAO,CAAC2C,CAAC,CAACC,MAAM,CAACrB,KAAK,CAAE;cAAC,SAAS;YAAA;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACtF,eACP,QAAC,IAAI;YAAC,IAAI;YAAC,EAAE,EAAE,CAAE;YAAC,KAAK,EAAE;cAAEiB,SAAS,EAAE,MAAM;cAAEE,UAAU,EAAE;YAAM,CAAE;YAAA,uBAChE,QAAC,MAAM;cAAC,OAAO,EAAC,UAAU;cAAC,OAAO,EAAE,MAAM3B,MAAM,EAAG;cAAC,KAAK,EAAE;gBAAEyB,SAAS,EAAE;cAAO,CAAE;cAAC,SAAS;cAAA,UAAC;YAE5F;cAAA;cAAA;cAAA;YAAA;UAAS;YAAA;YAAA;YAAA;UAAA,QACJ;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA,QAWH,eAKN;QAAA,UAAI;MAAC;QAAA;QAAA;QAAA;MAAA,QAAK,eAGV,QAAC,QAAQ;QACP,IAAI,EAAE3C,IAAK;QACX,OAAO,EAAEmB,OAAQ;QACjB,QAAQ,EAAErB,QAAS;QACnB,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;QAChC,gBAAgB,EAAGkD,WAAW,IAAKjD,WAAW,CAACiD,WAAW,CAAE;QAC5D,UAAU;MAAA;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACQ,eAEZ;MAAA,wBACE;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAK,KAAK,EAAEV,gBAAiB;QAAA,uBAC3B,QAAC,YAAY;UAAC,MAAM,EAAER,OAAQ;UAAC,WAAW,EAAE;QAAI;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC/C;IAAA;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA;IAAA;IAAA;IAAA;EAAA,QAED;AAGX;AAAC,GAnMuBjC,SAAS;AAAA,KAATA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}