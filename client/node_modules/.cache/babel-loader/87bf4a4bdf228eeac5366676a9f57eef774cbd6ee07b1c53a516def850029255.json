{"ast":null,"code":"var _jsxFileName = \"/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/PeopleInfoPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport PeopleCard from '../components/PeopleCard';\nimport { formatDuration, formatReleaseDate } from '../helpers/formatter';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { Box, Container } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst handleAvatarClick = (event, person) => {\n  event.preventDefault();\n  window.location.href = `/people/${person.id}`;\n};\nconst config = require('../config.json');\nexport default function PeopleInfoPage() {\n  _s();\n  const {\n    imdb_name_id\n  } = useParams();\n  // const imdb_name_id = 'nm0000025';\n  // console.log({imdb_name_id});\n\n  const [peopleData, setPeopleData] = useState([]); // default should actually just be [], but empty object element added to avoid error in template code\n  const [avgVote, setAvgVote] = useState({});\n  const [relatedActors, setRelatedActors] = useState([]);\n  const [moviesActedIn, setMoviesActedIn] = useState([]);\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/people/${imdb_name_id}`).then(res => res.json()).then(resJson => setPeopleData(resJson));\n    fetch(`http://${config.server_host}:${config.server_port}/avg_vote_person/${imdb_name_id}`).then(res => res.json()).then(resJson => setAvgVote(resJson));\n    fetch(`http://${config.server_host}:${config.server_port}/related_actors/${imdb_name_id}`).then(res => res.json()).then(resJson => setRelatedActors(resJson));\n    fetch(`http://${config.server_host}:${config.server_port}/movie_people_acted/${imdb_name_id}`).then(res => res.json()).then(resJson => setMoviesActedIn(resJson));\n  }, []);\n  const responsive = {\n    superLargeDesktop: {\n      breakpoint: {\n        max: 4000,\n        min: 3000\n      },\n      items: 7,\n      slidesToSlide: 7 // optional, default to 1.\n    },\n\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 5,\n      slidesToSlide: 5 // optional, default to 1.\n    },\n\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 464\n      },\n      items: 3,\n      slidesToSlide: 3 // optional, default to 1.\n    },\n\n    mobile: {\n      breakpoint: {\n        max: 464,\n        min: 0\n      },\n      items: 1,\n      slidesToSlide: 1 // optional, default to 1.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PeopleCard, {\n        name: peopleData.name,\n        avgVote: avgVote.avg_rating,\n        date_of_birth: peopleData.date_of_birth,\n        place_of_birth: peopleData.place_of_birth,\n        bio: peopleData.bio,\n        photo_url: peopleData.photo_url,\n        date_of_death: peopleData.date_of_death\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), moviesActedIn && moviesActedIn.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Most Popular Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n          responsive: responsive,\n          itemClass: \"carousel-item\",\n          children: moviesActedIn.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: `/movies/${movie.imdb_title_id}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: people.photo_url ? people.photo_url : defaultImage,\n                alt: `${movie.title} poster`,\n                style: {\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, movie.imdb_title_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 2\n        },\n        children: \"Related People\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          overflowX: 'scroll'\n        },\n        children: relatedActors.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: 50\n          },\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/people/${person.id}`,\n            exact: true,\n            style: {\n              zIndex: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: person.name,\n              src: person.photo_url,\n              sx: {\n                width: 100,\n                height: 100,\n                cursor: 'pointer'\n              },\n              onClick: event => handleAvatarClick(event, person)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              mt: 1\n            },\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, person.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(PeopleInfoPage, \"emHx/s0vJorHLPGD/+nMeY51P7k=\", false, function () {\n  return [useParams];\n});\n_c = PeopleInfoPage;\nvar _c;\n$RefreshReg$(_c, \"PeopleInfoPage\");","map":{"version":3,"names":["useEffect","useState","useParams","Typography","PeopleCard","formatDuration","formatReleaseDate","Carousel","Link","Stack","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Box","Container","NavLink","Avatar","handleAvatarClick","event","person","preventDefault","window","location","href","id","config","require","PeopleInfoPage","imdb_name_id","peopleData","setPeopleData","avgVote","setAvgVote","relatedActors","setRelatedActors","moviesActedIn","setMoviesActedIn","fetch","server_host","server_port","then","res","json","resJson","responsive","superLargeDesktop","breakpoint","max","min","items","slidesToSlide","desktop","tablet","mobile","name","avg_rating","date_of_birth","place_of_birth","bio","photo_url","date_of_death","length","map","movie","imdb_title_id","people","defaultImage","title","width","mb","display","overflowX","marginRight","zIndex","height","cursor","mt"],"sources":["/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/PeopleInfoPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport PeopleCard from '../components/PeopleCard';\nimport { formatDuration, formatReleaseDate } from '../helpers/formatter';\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport { Box, Container } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from '@mui/material/Avatar';\nconst handleAvatarClick = (event, person) => {\n  event.preventDefault();\n  window.location.href = `/people/${person.id}`;\n};\n\nconst config = require('../config.json');\n\nexport default function PeopleInfoPage() {\n  const { imdb_name_id } = useParams();\n  // const imdb_name_id = 'nm0000025';\n  // console.log({imdb_name_id});\n\n  const [peopleData, setPeopleData] = useState([]); // default should actually just be [], but empty object element added to avoid error in template code\n  const [avgVote, setAvgVote] = useState({});\n  const [relatedActors, setRelatedActors] = useState([]);\n  const [moviesActedIn, setMoviesActedIn] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/people/${imdb_name_id}`)\n      .then(res => res.json())\n      .then(resJson => setPeopleData(resJson));\n    fetch(`http://${config.server_host}:${config.server_port}/avg_vote_person/${imdb_name_id}`)\n      .then(res => res.json())\n      .then(resJson => setAvgVote(resJson));\n    fetch(`http://${config.server_host}:${config.server_port}/related_actors/${imdb_name_id}`)\n      .then(res => res.json())\n      .then(resJson => setRelatedActors(resJson));\n    fetch(`http://${config.server_host}:${config.server_port}/movie_people_acted/${imdb_name_id}`)\n      .then(res => res.json())\n      .then(resJson => setMoviesActedIn(resJson));\n  }, []);\n  const responsive = {\n    superLargeDesktop: {\n      breakpoint: { max: 4000, min: 3000 },\n      items: 7,\n      slidesToSlide: 7, // optional, default to 1.\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 5,\n      slidesToSlide: 5, // optional, default to 1.\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 3,\n      slidesToSlide: 3, // optional, default to 1.\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n      slidesToSlide: 1, // optional, default to 1.\n    },\n  };\n\n  return (\n    <Container>\n      <div>\n        <PeopleCard\n          name={peopleData.name}\n          avgVote={avgVote.avg_rating}\n          date_of_birth={peopleData.date_of_birth}\n          place_of_birth={peopleData.place_of_birth}\n          bio={peopleData.bio}\n          photo_url={peopleData.photo_url}\n          date_of_death={peopleData.date_of_death}\n        />\n        {moviesActedIn && moviesActedIn.length > 0 && (\n          <>\n            <h3>Most Popular Movies</h3>\n            <Carousel responsive={responsive} itemClass=\"carousel-item\">\n              {moviesActedIn.map((movie) => (\n                <div key={movie.imdb_title_id}>\n                  <NavLink to={`/movies/${movie.imdb_title_id}`}>\n                    <img src={people.photo_url ? people.photo_url : defaultImage} alt={`${movie.title} poster`} style={{ width: '100%' }} />\n                  </NavLink>\n                </div>\n              ))}\n            </Carousel>\n          </>\n        )}\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>Related People</Typography>\n        <div style={{ display: 'flex', overflowX: 'scroll' }}>\n          {relatedActors.map(person => (\n            <div key={person.name} style={{ marginRight: 50 }}>\n              <NavLink to={`/people/${person.id}`} exact style={{ zIndex: 1 }}>\n                <Avatar alt={person.name} src={person.photo_url} sx={{ width: 100, height: 100, cursor: 'pointer' }} onClick={(event) => handleAvatarClick(event, person)} />\n              </NavLink>\n              <Typography variant=\"subtitle1\" sx={{ mt: 1 }}>{person.name}</Typography>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Container>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}