{"ast":null,"code":"var _jsxFileName = \"/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/MoviesPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Pagination from '../components/Pagination';\nimport { Box, TextField, Checkbox, Container, MenuItem, Button, Slider, FormControlLabel, Typography } from '@mui/material';\nimport Rating from '@mui/material/Rating';\nimport Grid from '@mui/material/Grid';\nimport defaultImage from '../images/i6.jpg';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Card, CardContent, CardMedia } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nconst genres = ['All genres', 'Action', 'Adventure', 'Animation', 'Biography', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'Film-Noir', 'History', 'Horror', 'Music', 'Musical', 'Mystery', 'Reality-TV', 'Romance', 'Sci-Fi', 'Sport', 'Thriller', 'War', 'Western'];\nconst languages = ['All languages', 'Aboriginal', 'Afrikaans', 'Albanian', 'American Sign Language', 'Arabic', 'Armenian', 'Bengali', 'Bosnian', 'Bulgarian', 'Cantonese', 'Catalan', 'Chinese', 'Croatian', 'Czech', 'Dari', 'Danish', 'Dutch', 'English', 'Estonian', 'Finnish', 'Filipino', 'Flemish', 'French', 'Georgian', 'German', 'Greek', 'Hebrew', 'Hindi', 'Hokkien', 'Hungarian', 'Icelandic', 'Indonesian', 'Inuktitut', 'Irish', 'Italian', 'Japanese', 'Korean', 'Kurdish', 'Latin', 'Latvian', 'Lithuanian', 'Mandarin', 'Malayalam', 'Marathi', 'Min Nan', 'Norwegian', 'Persian', 'Polish', 'Portuguese', 'Punjabi', 'Quechua', 'Romanian', 'Romany', 'Russian', 'Scottish Gaelic', 'Serbian', 'Serbo-Croatian', 'Shanghainese', 'Slovak', 'Slovenian', 'Spanish', 'Swahili', 'Swedish', 'Swiss German', 'Tagalog', 'Tamil', 'Telugu', 'Thai', 'Tibetan', 'Turkish', 'Ukrainian', 'Urdu', 'Vietnamese', 'Wolof', 'Xhosa', 'Yiddish', 'Zulu'];\nconst countries = ['All countries', 'Algeria', 'Argentina', 'Australia', 'Austria', 'Belgium', 'Brazil', 'Bulgaria', 'Canada', 'Chile', 'China', 'Colombia', 'Croatia', 'Cuba', 'Czech Republic', 'Czechoslovakia', 'Denmark', 'East Germany', 'Egypt', 'Estonia', 'Finland', 'France', 'Georgia', 'Germany', 'Greece', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Ireland', 'Israel', 'Italy', 'Japan', 'Kazakhstan', 'Latvia', 'Lithuania', 'Luxembourg', 'Mexico', 'Morocco', 'Netherlands', 'New Zealand', 'Norway', 'Peru', 'Philippines', 'Poland', 'Portugal', 'Qatar', 'Romania', 'Russia', 'Senegal', 'Serbia', 'Singapore', 'Slovakia', 'Slovenia', 'South Africa', 'South Korea', 'Soviet Union', 'Spain', 'Sweden', 'Switzerland', 'Taiwan', 'Thailand', 'Tunisia', 'Turkey', 'UK', 'Ukraine', 'United Arab Emirates', 'Uruguay', 'USA', 'Venezuela', 'West Germany', 'Yugoslavia'];\nexport default function MoviesPage() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [moviesLoaded, setMoviesLoaded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [checkIsOscar, setCheckIsOscar] = useState(false);\n  const [yearRange, setYearRange] = useState([1900, 2023]);\n  const moviesPerPage = 28;\n  const totalMovies = movies.length;\n  const totalPages = totalMovies > 0 ? Math.ceil(totalMovies / moviesPerPage) : 0;\n  const indexOfLastMovie = currentPage * moviesPerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n  const currentMovies = movies && movies.length > 0 ? movies.slice(indexOfFirstMovie, indexOfLastMovie) : [];\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/movies`).then(res => res.json()).then(resJson => {\n      setMovies(resJson);\n      setMoviesLoaded(true);\n    });\n  }, []);\n  const search = () => {\n    fetch(`http://${config.server_host}:${config.server_port}/search_movies?title=${title}` + `&genre=${selectedGenre}` + `&language=${selectedLanguage}` + `&country=${selectedCountry}` + `&year_low=${yearRange[0]}&year_high=${yearRange[1]}` + `&isOscar=${checkIsOscar}`).then(res => res.json()).then(resJson => setMovies(resJson));\n  };\n  const handleChangePage = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'center',\n      marginTop: '50px',\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& > :not(style)': {\n          m: 1,\n          minwidth: '25ch'\n        },\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"movieTitle\",\n        label: \"Movie Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        helperText: \"Please input the title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"genreSelection\",\n        select: true,\n        label: \"Genre\",\n        value: selectedGenre,\n        onChange: e => setSelectedGenre(e.target.value === 'All genres' ? '' : e.target.value),\n        defaultValue: \"\",\n        helperText: \"Please select the genre\",\n        children: genres.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"languageSelection\",\n        select: true,\n        label: \"Language\",\n        value: selectedLanguage,\n        onChange: e => setSelectedLanguage(e.target.value === 'All languages' ? '' : e.target.value),\n        defaultValue: \"\",\n        helperText: \"Please select the language\",\n        children: languages.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"countrySelection\",\n        select: true,\n        label: \"Country\",\n        value: selectedCountry,\n        onChange: e => setSelectedCountry(e.target.value === 'All countries' ? '' : e.target.value),\n        defaultValue: \"\",\n        helperText: \"Please select the country\",\n        children: countries.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: checkIsOscar,\n          onChange: e => setCheckIsOscar(e.target.checked)\n          // name=\"isOscar\"\n          // color=\"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this),\n        label: \"isOscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Please select the year range\",\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          value: yearRange,\n          onChange: (e, newValue) => setYearRange(newValue),\n          valueLabelDisplay: \"auto\",\n          \"aria-labelledby\": \"year-range-slider\",\n          min: 1900,\n          max: 2023,\n          step: 1,\n          style: {\n            width: 200\n          }\n          // helperText=\"Please select the year range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => search(),\n        style: {\n          left: '50%',\n          transform: 'translateX(-50%)'\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), moviesLoaded && currentMovies && currentMovies.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '10px',\n        marginTop: '40px'\n      },\n      children: currentMovies.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: 'calc(25% - 50px)',\n          minWidth: '250px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.imdb_title_id}`,\n          children: /*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            image: movie.poster_url ? movie.poster_url : defaultImage,\n            alt: movie.title,\n            height: \"450px\",\n            width: \"300px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'flex-start'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Rating, {\n                  name: \"read-only\",\n                  value: movie.avg_vote / 2,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    marginLeft: '5px',\n                    fontSize: '15px',\n                    marginTop: '0px'\n                  },\n                  children: `${(movie.avg_vote / 2).toFixed(1)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)\n    // <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginTop: '40px' }}>\n    //   {currentMovies.map(movie => (\n    //     <Box key={movie.id} sx={{ width: 'calc(20% - 10px)', minWidth: '150px' }}>\n    // <NavLink to={`/movies/${movie.imdb_title_id}`}>\n    //   <img src={movie.poster_url ? movie.poster_url : defaultImage} alt={movie.title} style={{ height: '300px', width: '210px' }} />\n    // </NavLink>\n    //       {/* movie title and rating starts */}\n    //       <Grid container spacing={1}>\n    //         <Grid item xs={12}>\n    //           <Typography variant=\"body1\" sx={{ fontSize: '14px', marginBottom: '0px' }}>\n    //             {movie.title}\n    //           </Typography>\n    //         </Grid>\n    //         <Grid item xs={12}>\n    //           <div style={{ display: 'flex', alignItems: 'flex-start' }}>\n    //             <Rating name=\"read-only\" value={movie.avg_vote / 2} readOnly />\n    //             <Typography variant=\"subtitle1\" sx={{ marginLeft: '5px', fontSize: '15px', marginTop: '0px' }}>\n    //               {`${(movie.avg_vote / 2).toFixed(1)}`}\n    //             </Typography>\n    //           </div>\n    //         </Grid>\n    //       </Grid>\n    //     </Box>\n    //   ))}\n    // </Box>\n    : !moviesLoaded ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        fontSize: 24\n      },\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        fontSize: 24\n      },\n      children: \"No movies found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-page\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: '40px 0',\n        flex: \"1 1 auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: totalPages,\n        currentPage: currentPage,\n        onChangePage: handleChangePage,\n        sx: {\n          '& .MuiPaginationItem-root': {\n            fontSize: '1.8rem',\n            padding: '8px'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesPage, \"sSs6GWoDXTLGGyR2IfwrFfVB2GY=\");\n_c = MoviesPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"names":["useEffect","useState","NavLink","Pagination","Box","TextField","Checkbox","Container","MenuItem","Button","Slider","FormControlLabel","Typography","Rating","Grid","defaultImage","Tooltip","Card","CardContent","CardMedia","Link","config","require","genres","languages","countries","MoviesPage","movies","setMovies","currentPage","setCurrentPage","moviesLoaded","setMoviesLoaded","title","setTitle","selectedGenre","setSelectedGenre","selectedLanguage","setSelectedLanguage","selectedCountry","setSelectedCountry","checkIsOscar","setCheckIsOscar","yearRange","setYearRange","moviesPerPage","totalMovies","length","totalPages","Math","ceil","indexOfLastMovie","indexOfFirstMovie","currentMovies","slice","fetch","server_host","server_port","then","res","json","resJson","search","handleChangePage","page","display","flexWrap","justifyContent","marginTop","flexDirection","m","minwidth","alignItems","e","target","value","map","option","checked","newValue","width","left","transform","gap","movie","minWidth","imdb_title_id","poster_url","avg_vote","marginLeft","fontSize","toFixed","id","margin","flex","padding"],"sources":["/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/MoviesPage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Pagination from '../components/Pagination';\nimport { Box, TextField, Checkbox, Container, MenuItem, Button, Slider, FormControlLabel, Typography } from '@mui/material';\nimport Rating from '@mui/material/Rating';\nimport Grid from '@mui/material/Grid';\nimport defaultImage from '../images/i6.jpg';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Card, CardContent, CardMedia } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nconst config = require('../config.json');\nconst genres = ['All genres', 'Action', 'Adventure', 'Animation', 'Biography', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Family', 'Fantasy', 'Film-Noir', 'History', 'Horror', 'Music', 'Musical', 'Mystery', 'Reality-TV', 'Romance', 'Sci-Fi', 'Sport', 'Thriller', 'War', 'Western'];\nconst languages = [\n  'All languages',\n  'Aboriginal',\n  'Afrikaans',\n  'Albanian',\n  'American Sign Language',\n  'Arabic',\n  'Armenian',\n  'Bengali',\n  'Bosnian',\n  'Bulgarian',\n  'Cantonese',\n  'Catalan',\n  'Chinese',\n  'Croatian',\n  'Czech',\n  'Dari',\n  'Danish',\n  'Dutch',\n  'English',\n  'Estonian',\n  'Finnish',\n  'Filipino',\n  'Flemish',\n  'French',\n  'Georgian',\n  'German',\n  'Greek',\n  'Hebrew',\n  'Hindi',\n  'Hokkien',\n  'Hungarian',\n  'Icelandic',\n  'Indonesian',\n  'Inuktitut',\n  'Irish',\n  'Italian',\n  'Japanese',\n  'Korean',\n  'Kurdish',\n  'Latin',\n  'Latvian',\n  'Lithuanian',\n  'Mandarin',\n  'Malayalam',\n  'Marathi',\n  'Min Nan',\n  'Norwegian',\n  'Persian',\n  'Polish',\n  'Portuguese',\n  'Punjabi',\n  'Quechua',\n  'Romanian',\n  'Romany',\n  'Russian',\n  'Scottish Gaelic',\n  'Serbian',\n  'Serbo-Croatian',\n  'Shanghainese',\n  'Slovak',\n  'Slovenian',\n  'Spanish',\n  'Swahili',\n  'Swedish',\n  'Swiss German',\n  'Tagalog',\n  'Tamil',\n  'Telugu',\n  'Thai',\n  'Tibetan',\n  'Turkish',\n  'Ukrainian',\n  'Urdu',\n  'Vietnamese',\n  'Wolof',\n  'Xhosa',\n  'Yiddish',\n  'Zulu'\n];\nconst countries = [\n  'All countries',\n  'Algeria',\n  'Argentina',\n  'Australia',\n  'Austria',\n  'Belgium',\n  'Brazil',\n  'Bulgaria',\n  'Canada',\n  'Chile',\n  'China',\n  'Colombia',\n  'Croatia',\n  'Cuba',\n  'Czech Republic',\n  'Czechoslovakia',\n  'Denmark',\n  'East Germany',\n  'Egypt',\n  'Estonia',\n  'Finland',\n  'France',\n  'Georgia',\n  'Germany',\n  'Greece',\n  'Hong Kong',\n  'Hungary',\n  'Iceland',\n  'India',\n  'Indonesia',\n  'Iran',\n  'Ireland',\n  'Israel',\n  'Italy',\n  'Japan',\n  'Kazakhstan',\n  'Latvia',\n  'Lithuania',\n  'Luxembourg',\n  'Mexico',\n  'Morocco',\n  'Netherlands',\n  'New Zealand',\n  'Norway',\n  'Peru',\n  'Philippines',\n  'Poland',\n  'Portugal',\n  'Qatar',\n  'Romania',\n  'Russia',\n  'Senegal',\n  'Serbia',\n  'Singapore',\n  'Slovakia',\n  'Slovenia',\n  'South Africa',\n  'South Korea',\n  'Soviet Union',\n  'Spain',\n  'Sweden',\n  'Switzerland',\n  'Taiwan',\n  'Thailand',\n  'Tunisia',\n  'Turkey',\n  'UK',\n  'Ukraine',\n  'United Arab Emirates',\n  'Uruguay',\n  'USA',\n  'Venezuela',\n  'West Germany',\n  'Yugoslavia'\n];\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [moviesLoaded, setMoviesLoaded] = useState(false);\n\n  const [title, setTitle] = useState('');\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [checkIsOscar, setCheckIsOscar] = useState(false);\n  const [yearRange, setYearRange] = useState([1900, 2023]);\n\n  const moviesPerPage = 28;\n  const totalMovies = movies.length;\n  const totalPages = totalMovies > 0 ? Math.ceil(totalMovies / moviesPerPage) : 0;\n  const indexOfLastMovie = currentPage * moviesPerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n  const currentMovies = movies && movies.length > 0 ? movies.slice(indexOfFirstMovie, indexOfLastMovie) : [];\n\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/movies`)\n      .then(res => res.json())\n      .then(resJson => {\n        setMovies(resJson);\n        setMoviesLoaded(true);\n      });\n  }, []);\n\n  const search = () => {\n    fetch(`http://${config.server_host}:${config.server_port}/search_movies?title=${title}` +\n      `&genre=${selectedGenre}` +\n      `&language=${selectedLanguage}` +\n      `&country=${selectedCountry}` +\n      `&year_low=${yearRange[0]}&year_high=${yearRange[1]}` +\n      `&isOscar=${checkIsOscar}`\n    )\n      .then(res => res.json())\n      .then(resJson => setMovies(resJson));\n  }\n\n  const handleChangePage = (page) => {\n    setCurrentPage(page);\n  };\n\n\n  return (\n    <Container style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', marginTop: '50px', display: \"flex\", flexDirection: \"column\" }}>\n      {/* search bar */}\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, minwidth: '25ch' },\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <TextField\n          id=\"movieTitle\"\n          label=\"Movie Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          helperText=\"Please input the title\"\n        />\n        <TextField\n          id=\"genreSelection\"\n          select\n          label=\"Genre\"\n          value={selectedGenre}\n          onChange={(e) => setSelectedGenre(e.target.value === 'All genres' ? '' : e.target.value)}\n          defaultValue=\"\"\n          helperText=\"Please select the genre\"\n        >\n          {genres.map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"languageSelection\"\n          select\n          label=\"Language\"\n          value={selectedLanguage}\n          onChange={(e) => setSelectedLanguage(e.target.value === 'All languages' ? '' : e.target.value)}\n          defaultValue=\"\"\n          helperText=\"Please select the language\"\n        >\n          {languages.map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"countrySelection\"\n          select\n          label=\"Country\"\n          value={selectedCountry}\n          onChange={(e) => setSelectedCountry(e.target.value === 'All countries' ? '' : e.target.value)}\n          defaultValue=\"\"\n          helperText=\"Please select the country\"\n        >\n          {countries.map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={checkIsOscar}\n              onChange={(e) => setCheckIsOscar(e.target.checked)}\n            // name=\"isOscar\"\n            // color=\"primary\"\n            />\n          }\n          label=\"isOscar\"\n        />\n        <Tooltip title=\"Please select the year range\">\n          <Slider\n            value={yearRange}\n            onChange={(e, newValue) => setYearRange(newValue)}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"year-range-slider\"\n            min={1900}\n            max={2023}\n            step={1}\n            style={{ width: 200 }}\n          // helperText=\"Please select the year range\"\n          />\n        </Tooltip>\n        {/* <Button onClick={() => search()} sx={{ alignSelf: 'flex-start', height: '55px', width: '30px' }}\n          variant=\"outlined\"\n          size=\"small\"\n        // sx={{ height: '50px', width: '20px' }}\n        >\n          Find\n        </Button> */}\n        <Button onClick={() => search()} style={{ left: '50%', transform: 'translateX(-50%)' }}>\n          Search\n        </Button>\n      </Box>\n      {/*poster*/}\n      {moviesLoaded && currentMovies && currentMovies.length > 0 ? (\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginTop: '40px' }}>\n          {currentMovies.map(movie => (\n            <Card key={movie.id} sx={{ width: 'calc(25% - 50px)', minWidth: '250px' }}>\n              <Link to={`/movies/${movie.imdb_title_id}`}>\n                <CardMedia\n                  component=\"img\"\n                  image={movie.poster_url ? movie.poster_url : defaultImage}\n                  alt={movie.title}\n                  height=\"450px\"\n                  width=\"300px\"\n                />\n              </Link>\n              <CardContent>\n                <Typography variant=\"h6\" component=\"h2\">\n                  {movie.title}\n                </Typography>\n                <Grid container spacing={1}>\n                  <Grid item xs={12}>\n                    <div style={{ display: 'flex', alignItems: 'flex-start' }}>\n                      <Rating name=\"read-only\" value={movie.avg_vote / 2} readOnly />\n                      <Typography variant=\"subtitle1\" sx={{ marginLeft: '5px', fontSize: '15px', marginTop: '0px' }}>\n                        {`${(movie.avg_vote / 2).toFixed(1)}`}\n                      </Typography>\n                    </div>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          ))}\n        </Box>\n        // <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginTop: '40px' }}>\n        //   {currentMovies.map(movie => (\n        //     <Box key={movie.id} sx={{ width: 'calc(20% - 10px)', minWidth: '150px' }}>\n        // <NavLink to={`/movies/${movie.imdb_title_id}`}>\n        //   <img src={movie.poster_url ? movie.poster_url : defaultImage} alt={movie.title} style={{ height: '300px', width: '210px' }} />\n        // </NavLink>\n        //       {/* movie title and rating starts */}\n        //       <Grid container spacing={1}>\n        //         <Grid item xs={12}>\n        //           <Typography variant=\"body1\" sx={{ fontSize: '14px', marginBottom: '0px' }}>\n        //             {movie.title}\n        //           </Typography>\n        //         </Grid>\n        //         <Grid item xs={12}>\n        //           <div style={{ display: 'flex', alignItems: 'flex-start' }}>\n        //             <Rating name=\"read-only\" value={movie.avg_vote / 2} readOnly />\n        //             <Typography variant=\"subtitle1\" sx={{ marginLeft: '5px', fontSize: '15px', marginTop: '0px' }}>\n        //               {`${(movie.avg_vote / 2).toFixed(1)}`}\n        //             </Typography>\n        //           </div>\n        //         </Grid>\n        //       </Grid>\n        //     </Box>\n        //   ))}\n        // </Box>\n      ) : (\n        !moviesLoaded ? <Box sx={{ fontSize: 24 }}>Loading movies...</Box> :\n          <Box sx={{ fontSize: 24 }}>No movies found</Box>\n      )}\n      <div className=\"movie-page\"\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: '40px 0',\n          flex: \"1 1 auto\"\n        }}>\n        <Pagination\n          count={totalPages}\n          currentPage={currentPage}\n          onChangePage={handleChangePage}\n          sx={{ '& .MuiPaginationItem-root': { fontSize: '1.8rem', padding: '8px' } }} />\n      </div>\n    </Container>\n  );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,eAAe;AAC3H,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,eAAe;AAC5D,SAASC,IAAI,QAAQ,kBAAkB;AAAC;AAExC,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACxC,MAAMC,MAAM,GAAG,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,CAAC;AACzR,MAAMC,SAAS,GAAG,CAChB,eAAe,EACf,YAAY,EACZ,WAAW,EACX,UAAU,EACV,wBAAwB,EACxB,QAAQ,EACR,UAAU,EACV,SAAS,EACT,SAAS,EACT,WAAW,EACX,WAAW,EACX,SAAS,EACT,SAAS,EACT,UAAU,EACV,OAAO,EACP,MAAM,EACN,QAAQ,EACR,OAAO,EACP,SAAS,EACT,UAAU,EACV,SAAS,EACT,UAAU,EACV,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,OAAO,EACP,SAAS,EACT,WAAW,EACX,WAAW,EACX,YAAY,EACZ,WAAW,EACX,OAAO,EACP,SAAS,EACT,UAAU,EACV,QAAQ,EACR,SAAS,EACT,OAAO,EACP,SAAS,EACT,YAAY,EACZ,UAAU,EACV,WAAW,EACX,SAAS,EACT,SAAS,EACT,WAAW,EACX,SAAS,EACT,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,SAAS,EACT,UAAU,EACV,QAAQ,EACR,SAAS,EACT,iBAAiB,EACjB,SAAS,EACT,gBAAgB,EAChB,cAAc,EACd,QAAQ,EACR,WAAW,EACX,SAAS,EACT,SAAS,EACT,SAAS,EACT,cAAc,EACd,SAAS,EACT,OAAO,EACP,QAAQ,EACR,MAAM,EACN,SAAS,EACT,SAAS,EACT,WAAW,EACX,MAAM,EACN,YAAY,EACZ,OAAO,EACP,OAAO,EACP,SAAS,EACT,MAAM,CACP;AACD,MAAMC,SAAS,GAAG,CAChB,eAAe,EACf,SAAS,EACT,WAAW,EACX,WAAW,EACX,SAAS,EACT,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,OAAO,EACP,OAAO,EACP,UAAU,EACV,SAAS,EACT,MAAM,EACN,gBAAgB,EAChB,gBAAgB,EAChB,SAAS,EACT,cAAc,EACd,OAAO,EACP,SAAS,EACT,SAAS,EACT,QAAQ,EACR,SAAS,EACT,SAAS,EACT,QAAQ,EACR,WAAW,EACX,SAAS,EACT,SAAS,EACT,OAAO,EACP,WAAW,EACX,MAAM,EACN,SAAS,EACT,QAAQ,EACR,OAAO,EACP,OAAO,EACP,YAAY,EACZ,QAAQ,EACR,WAAW,EACX,YAAY,EACZ,QAAQ,EACR,SAAS,EACT,aAAa,EACb,aAAa,EACb,QAAQ,EACR,MAAM,EACN,aAAa,EACb,QAAQ,EACR,UAAU,EACV,OAAO,EACP,SAAS,EACT,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,WAAW,EACX,UAAU,EACV,UAAU,EACV,cAAc,EACd,aAAa,EACb,cAAc,EACd,OAAO,EACP,QAAQ,EACR,aAAa,EACb,QAAQ,EACR,UAAU,EACV,SAAS,EACT,QAAQ,EACR,IAAI,EACJ,SAAS,EACT,sBAAsB,EACtB,SAAS,EACT,KAAK,EACL,WAAW,EACX,cAAc,EACd,YAAY,CACb;AAED,eAAe,SAASC,UAAU,GAAG;EAAA;EACnC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACsC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACwC,YAAY,EAAEC,eAAe,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0C,SAAS,EAAEC,YAAY,CAAC,GAAG3C,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;EAExD,MAAM4C,aAAa,GAAG,EAAE;EACxB,MAAMC,WAAW,GAAGnB,MAAM,CAACoB,MAAM;EACjC,MAAMC,UAAU,GAAGF,WAAW,GAAG,CAAC,GAAGG,IAAI,CAACC,IAAI,CAACJ,WAAW,GAAGD,aAAa,CAAC,GAAG,CAAC;EAC/E,MAAMM,gBAAgB,GAAGtB,WAAW,GAAGgB,aAAa;EACpD,MAAMO,iBAAiB,GAAGD,gBAAgB,GAAGN,aAAa;EAC1D,MAAMQ,aAAa,GAAG1B,MAAM,IAAIA,MAAM,CAACoB,MAAM,GAAG,CAAC,GAAGpB,MAAM,CAAC2B,KAAK,CAACF,iBAAiB,EAAED,gBAAgB,CAAC,GAAG,EAAE;EAE1GnD,SAAS,CAAC,MAAM;IACduD,KAAK,CAAE,UAASlC,MAAM,CAACmC,WAAY,IAAGnC,MAAM,CAACoC,WAAY,SAAQ,CAAC,CAC/DC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAI;MACfjC,SAAS,CAACiC,OAAO,CAAC;MAClB7B,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM8B,MAAM,GAAG,MAAM;IACnBP,KAAK,CAAE,UAASlC,MAAM,CAACmC,WAAY,IAAGnC,MAAM,CAACoC,WAAY,wBAAuBxB,KAAM,EAAC,GACpF,UAASE,aAAc,EAAC,GACxB,aAAYE,gBAAiB,EAAC,GAC9B,YAAWE,eAAgB,EAAC,GAC5B,aAAYI,SAAS,CAAC,CAAC,CAAE,cAAaA,SAAS,CAAC,CAAC,CAAE,EAAC,GACpD,YAAWF,YAAa,EAAC,CAC3B,CACEiB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAIjC,SAAS,CAACiC,OAAO,CAAC,CAAC;EACxC,CAAC;EAED,MAAME,gBAAgB,GAAIC,IAAI,IAAK;IACjClC,cAAc,CAACkC,IAAI,CAAC;EACtB,CAAC;EAGD,oBACE,QAAC,SAAS;IAAC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,SAAS,EAAE,MAAM;MAAEH,OAAO,EAAE,MAAM;MAAEI,aAAa,EAAE;IAAS,CAAE;IAAA,wBAE7I,QAAC,GAAG;MACF,SAAS,EAAC,MAAM;MAChB,EAAE,EAAE;QACF,iBAAiB,EAAE;UAAEC,CAAC,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAO,CAAC;QAC7CN,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,MAAM;QAChBC,cAAc,EAAE,QAAQ;QACxBK,UAAU,EAAE;MACd,CAAE;MACF,UAAU;MACV,YAAY,EAAC,KAAK;MAAA,wBAElB,QAAC,SAAS;QACR,EAAE,EAAC,YAAY;QACf,KAAK,EAAC,aAAa;QACnB,KAAK,EAAEvC,KAAM;QACb,QAAQ,EAAGwC,CAAC,IAAKvC,QAAQ,CAACuC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC1C,UAAU,EAAC;MAAwB;QAAA;QAAA;QAAA;MAAA,QACnC,eACF,QAAC,SAAS;QACR,EAAE,EAAC,gBAAgB;QACnB,MAAM;QACN,KAAK,EAAC,OAAO;QACb,KAAK,EAAExC,aAAc;QACrB,QAAQ,EAAGsC,CAAC,IAAKrC,gBAAgB,CAACqC,CAAC,CAACC,MAAM,CAACC,KAAK,KAAK,YAAY,GAAG,EAAE,GAAGF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QACzF,YAAY,EAAC,EAAE;QACf,UAAU,EAAC,yBAAyB;QAAA,UAEnCpD,MAAM,CAACqD,GAAG,CAAEC,MAAM,iBACjB,QAAC,QAAQ;UAAc,KAAK,EAAEA,MAAO;UAAA,UAClCA;QAAM,GADMA,MAAM;UAAA;UAAA;UAAA;QAAA,QAGtB;MAAC;QAAA;QAAA;QAAA;MAAA,QACQ,eACZ,QAAC,SAAS;QACR,EAAE,EAAC,mBAAmB;QACtB,MAAM;QACN,KAAK,EAAC,UAAU;QAChB,KAAK,EAAExC,gBAAiB;QACxB,QAAQ,EAAGoC,CAAC,IAAKnC,mBAAmB,CAACmC,CAAC,CAACC,MAAM,CAACC,KAAK,KAAK,eAAe,GAAG,EAAE,GAAGF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC/F,YAAY,EAAC,EAAE;QACf,UAAU,EAAC,4BAA4B;QAAA,UAEtCnD,SAAS,CAACoD,GAAG,CAAEC,MAAM,iBACpB,QAAC,QAAQ;UAAc,KAAK,EAAEA,MAAO;UAAA,UAClCA;QAAM,GADMA,MAAM;UAAA;UAAA;UAAA;QAAA,QAGtB;MAAC;QAAA;QAAA;QAAA;MAAA,QACQ,eACZ,QAAC,SAAS;QACR,EAAE,EAAC,kBAAkB;QACrB,MAAM;QACN,KAAK,EAAC,SAAS;QACf,KAAK,EAAEtC,eAAgB;QACvB,QAAQ,EAAGkC,CAAC,IAAKjC,kBAAkB,CAACiC,CAAC,CAACC,MAAM,CAACC,KAAK,KAAK,eAAe,GAAG,EAAE,GAAGF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC9F,YAAY,EAAC,EAAE;QACf,UAAU,EAAC,2BAA2B;QAAA,UAErClD,SAAS,CAACmD,GAAG,CAAEC,MAAM,iBACpB,QAAC,QAAQ;UAAc,KAAK,EAAEA,MAAO;UAAA,UAClCA;QAAM,GADMA,MAAM;UAAA;UAAA;UAAA;QAAA,QAGtB;MAAC;QAAA;QAAA;QAAA;MAAA,QACQ,eACZ,QAAC,gBAAgB;QACf,OAAO,eACL,QAAC,QAAQ;UACP,OAAO,EAAEpC,YAAa;UACtB,QAAQ,EAAGgC,CAAC,IAAK/B,eAAe,CAAC+B,CAAC,CAACC,MAAM,CAACI,OAAO;UACnD;UACA;QAAA;UAAA;UAAA;UAAA;QAAA,QAED;QACD,KAAK,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QACf,eACF,QAAC,OAAO;QAAC,KAAK,EAAC,8BAA8B;QAAA,uBAC3C,QAAC,MAAM;UACL,KAAK,EAAEnC,SAAU;UACjB,QAAQ,EAAE,CAAC8B,CAAC,EAAEM,QAAQ,KAAKnC,YAAY,CAACmC,QAAQ,CAAE;UAClD,iBAAiB,EAAC,MAAM;UACxB,mBAAgB,mBAAmB;UACnC,GAAG,EAAE,IAAK;UACV,GAAG,EAAE,IAAK;UACV,IAAI,EAAE,CAAE;UACR,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAI;UACtB;QAAA;UAAA;UAAA;UAAA;QAAA;MACE;QAAA;QAAA;QAAA;MAAA,QACM,eAQV,QAAC,MAAM;QAAC,OAAO,EAAE,MAAMlB,MAAM,EAAG;QAAC,KAAK,EAAE;UAAEmB,IAAI,EAAE,KAAK;UAAEC,SAAS,EAAE;QAAmB,CAAE;QAAA,UAAC;MAExF;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,EAELnD,YAAY,IAAIsB,aAAa,IAAIA,aAAa,CAACN,MAAM,GAAG,CAAC,gBACxD,QAAC,GAAG;MAAC,EAAE,EAAE;QAAEkB,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE,MAAM;QAAEiB,GAAG,EAAE,MAAM;QAAEf,SAAS,EAAE;MAAO,CAAE;MAAA,UAC5Ef,aAAa,CAACuB,GAAG,CAACQ,KAAK,iBACtB,QAAC,IAAI;QAAgB,EAAE,EAAE;UAAEJ,KAAK,EAAE,kBAAkB;UAAEK,QAAQ,EAAE;QAAQ,CAAE;QAAA,wBACxE,QAAC,IAAI;UAAC,EAAE,EAAG,WAAUD,KAAK,CAACE,aAAc,EAAE;UAAA,uBACzC,QAAC,SAAS;YACR,SAAS,EAAC,KAAK;YACf,KAAK,EAAEF,KAAK,CAACG,UAAU,GAAGH,KAAK,CAACG,UAAU,GAAGxE,YAAa;YAC1D,GAAG,EAAEqE,KAAK,CAACnD,KAAM;YACjB,MAAM,EAAC,OAAO;YACd,KAAK,EAAC;UAAO;YAAA;YAAA;YAAA;UAAA;QACb;UAAA;UAAA;UAAA;QAAA,QACG,eACP,QAAC,WAAW;UAAA,wBACV,QAAC,UAAU;YAAC,OAAO,EAAC,IAAI;YAAC,SAAS,EAAC,IAAI;YAAA,UACpCmD,KAAK,CAACnD;UAAK;YAAA;YAAA;YAAA;UAAA,QACD,eACb,QAAC,IAAI;YAAC,SAAS;YAAC,OAAO,EAAE,CAAE;YAAA,uBACzB,QAAC,IAAI;cAAC,IAAI;cAAC,EAAE,EAAE,EAAG;cAAA,uBAChB;gBAAK,KAAK,EAAE;kBAAEgC,OAAO,EAAE,MAAM;kBAAEO,UAAU,EAAE;gBAAa,CAAE;gBAAA,wBACxD,QAAC,MAAM;kBAAC,IAAI,EAAC,WAAW;kBAAC,KAAK,EAAEY,KAAK,CAACI,QAAQ,GAAG,CAAE;kBAAC,QAAQ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAAG,eAC/D,QAAC,UAAU;kBAAC,OAAO,EAAC,WAAW;kBAAC,EAAE,EAAE;oBAAEC,UAAU,EAAE,KAAK;oBAAEC,QAAQ,EAAE,MAAM;oBAAEtB,SAAS,EAAE;kBAAM,CAAE;kBAAA,UAC1F,GAAE,CAACgB,KAAK,CAACI,QAAQ,GAAG,CAAC,EAAEG,OAAO,CAAC,CAAC,CAAE;gBAAC;kBAAA;kBAAA;kBAAA;gBAAA,QAC1B;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACT;cAAA;cAAA;cAAA;YAAA;UACD;YAAA;YAAA;YAAA;UAAA,QACF;QAAA;UAAA;UAAA;UAAA;QAAA,QACK;MAAA,GAxBLP,KAAK,CAACQ,EAAE;QAAA;QAAA;QAAA;MAAA,QA0BpB;IAAC;MAAA;MAAA;MAAA;IAAA;IAEJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAAA,EAEA,CAAC7D,YAAY,gBAAG,QAAC,GAAG;MAAC,EAAE,EAAE;QAAE2D,QAAQ,EAAE;MAAG,CAAE;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAM,gBAChE,QAAC,GAAG;MAAC,EAAE,EAAE;QAAEA,QAAQ,EAAE;MAAG,CAAE;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAC7C,eACD;MAAK,SAAS,EAAC,YAAY;MACzB,KAAK,EAAE;QACLzB,OAAO,EAAE,MAAM;QACfE,cAAc,EAAE,QAAQ;QACxBK,UAAU,EAAE,QAAQ;QACpBqB,MAAM,EAAE,QAAQ;QAChBC,IAAI,EAAE;MACR,CAAE;MAAA,uBACF,QAAC,UAAU;QACT,KAAK,EAAE9C,UAAW;QAClB,WAAW,EAAEnB,WAAY;QACzB,YAAY,EAAEkC,gBAAiB;QAC/B,EAAE,EAAE;UAAE,2BAA2B,EAAE;YAAE2B,QAAQ,EAAE,QAAQ;YAAEK,OAAO,EAAE;UAAM;QAAE;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC7E;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEhB;AAAC,GAhOuBrE,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}