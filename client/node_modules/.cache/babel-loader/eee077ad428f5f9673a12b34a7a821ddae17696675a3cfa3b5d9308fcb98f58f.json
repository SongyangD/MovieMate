{"ast":null,"code":"var _jsxFileName = \"/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/PeoplePage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Box, TextField, Checkbox, Container, MenuItem, Button, Slider, FormControlLabel, Typography } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport Pagination from '../components/Pagination';\n// import { people } from '../../../server/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst config = require('../config.json');\nexport default function PeoplePage() {\n  _s();\n  const [allPeople, setAllPeople] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [name, setName] = useState('');\n  const peoplePerPage = 30;\n  const totalPeople = allPeople.length;\n  const totalPages = Math.ceil(totalPeople / peoplePerPage);\n  const indexOfLastPeople = currentPage * peoplePerPage;\n  const indexOfFirstPeople = indexOfLastPeople - peoplePerPage;\n  const currentPeople = allPeople && allPeople.length > 0 ? allPeople.slice(indexOfFirstPeople, indexOfLastPeople) : [];\n  const flexFormat = {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly'\n  };\n  useEffect(() => {\n    fetch(`http://${config.server_host}:${config.server_port}/people`).then(res => res.json()).then(resJson => setAllPeople(resJson));\n  }, []);\n  const search = () => {\n    if (name.trim() === '') {\n      alert('Please enter a name to search');\n      return;\n    }\n    fetch(`http://${config.server_host}:${config.server_port}/search_people?name=${name}`).then(res => res.json()).then(resJson => setAllPeople(resJson));\n  };\n  const handleChangePage = page => {\n    setCurrentPage(page);\n  };\n  const imageStyle = {\n    maxWidth: \"200px\",\n    // Set the maximum width\n    maxHeight: \"200px\",\n    // Set the maximum height\n    objectFit: \"contain\" // Ensures the image maintains aspect ratio\n  };\n  // { width: '120%', height: '400px' } \n  return (\n    /*#__PURE__*/\n    // TODO (TASK 22): replace the empty object {} in the Container attribute sx with flexFormat. Observe the change to the Albums page. Then uncomment the code to display the cover image and once again observe the change, i.e. what happens to the layout now that each album card has a fixed width?\n    // consile.log\n    _jsxDEV(Container, {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        marginTop: '50px',\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          '& > :not(style)': {\n            m: 1,\n            minwidth: '25ch'\n          },\n          display: 'flex',\n          flexWrap: 'nowrap',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n          width: '100%'\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search by name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          variant: \"outlined\",\n          sx: {\n            marginRight: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => search(),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this), currentPeople && currentPeople.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '10px',\n          marginTop: '30px'\n        },\n        children: currentPeople.map(people => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 'calc(20% - 10px)',\n            minWidth: '150px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: `/people/${people.imdb_name_id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: people.photo_url,\n              alt: people.name,\n              style: {\n                height: '300px',\n                width: '210px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            sx: {\n              marginTop: '5px',\n              textAlign: 'center',\n              fontSize: '12px'\n            },\n            children: people.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, people.imdb_name_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          fontSize: 24\n        },\n        children: \"No people found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"people-page\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: '40px 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: totalPages,\n          currentPage: currentPage,\n          onChangePage: handleChangePage,\n          sx: {\n            '& .MuiPaginationItem-root': {\n              fontSize: '1.8rem',\n              padding: '8px'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(PeoplePage, \"FgnhD1JVtaXUWsMCzTHmzzscs7w=\");\n_c = PeoplePage;\nvar _c;\n$RefreshReg$(_c, \"PeoplePage\");","map":{"version":3,"names":["useEffect","useState","Box","TextField","Checkbox","Container","MenuItem","Button","Slider","FormControlLabel","Typography","NavLink","Pagination","config","require","PeoplePage","allPeople","setAllPeople","currentPage","setCurrentPage","name","setName","peoplePerPage","totalPeople","length","totalPages","Math","ceil","indexOfLastPeople","indexOfFirstPeople","currentPeople","slice","flexFormat","display","flexDirection","flexWrap","justifyContent","fetch","server_host","server_port","then","res","json","resJson","search","trim","alert","handleChangePage","page","imageStyle","maxWidth","maxHeight","objectFit","marginTop","m","minwidth","alignItems","width","e","target","value","marginRight","gap","map","people","minWidth","imdb_name_id","photo_url","height","textAlign","fontSize","margin","padding"],"sources":["/Users/susan/Documents/GitHub/Team168_Project/client/src/pages/PeoplePage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Box, TextField, Checkbox, Container, MenuItem, Button, Slider, FormControlLabel, Typography } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport Pagination from '../components/Pagination';\n// import { people } from '../../../server/routes';\n\n\nconst config = require('../config.json');\nexport default function PeoplePage() {\n  const [allPeople, setAllPeople] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [name, setName] = useState('');\n  const peoplePerPage = 30;\n  const totalPeople = allPeople.length;\n  const totalPages = Math.ceil(totalPeople / peoplePerPage);              \n  const indexOfLastPeople = currentPage * peoplePerPage;\n  const indexOfFirstPeople = indexOfLastPeople - peoplePerPage;\n  const currentPeople = allPeople && allPeople.length > 0 ? allPeople.slice(indexOfFirstPeople, indexOfLastPeople) : [];\n\n  const flexFormat = { display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-evenly' };\n\n useEffect(() => {\n  fetch(`http://${config.server_host}:${config.server_port}/people`)\n          .then(res => res.json())\n          .then(resJson => setAllPeople(resJson));\n      }, []);\n    \n  const search = () => {\n    if (name.trim() === '') {\n      alert('Please enter a name to search');\n      return;\n    }\n        fetch(`http://${config.server_host}:${config.server_port}/search_people?name=${name}`)\n          .then(res => res.json())\n          .then(resJson => setAllPeople(resJson));\n      }\n      const handleChangePage = (page) => {\n        setCurrentPage(page);}\n\n  const imageStyle = {\n    maxWidth: \"200px\", // Set the maximum width\n    maxHeight: \"200px\", // Set the maximum height\n    objectFit: \"contain\", // Ensures the image maintains aspect ratio\n  };\n  // { width: '120%', height: '400px' } \n  return (\n    // TODO (TASK 22): replace the empty object {} in the Container attribute sx with flexFormat. Observe the change to the Albums page. Then uncomment the code to display the cover image and once again observe the change, i.e. what happens to the layout now that each album card has a fixed width?\n// consile.log\n    <Container style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', marginTop: '50px', display: \"flex\", flexDirection: \"column\" }}>\n       <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, minwidth: '25ch' },\n          display: 'flex',\n          flexWrap: 'nowrap',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n          width:'100%'\n        }}\n        noValidate\n        autoComplete=\"off\"\n        >\n           <TextField\n          \n          label=\"Search by name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          variant=\"outlined\"\n          sx={{ marginRight: 1 }}\n        />\n        <Button onClick={() => search()} >\n          Search\n        </Button>\n      </Box>\n      {currentPeople && currentPeople.length > 0 ? (\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginTop: '30px' }}>\n          {currentPeople.map(people => (\n            <Box key={people.imdb_name_id} sx={{ width: 'calc(20% - 10px)', minWidth: '150px' }}>\n              <NavLink to={`/people/${people.imdb_name_id}`}>\n                <img src={people.photo_url} alt={people.name} style={{ height: '300px', width: '210px' }} />\n              </NavLink>\n              <Typography variant=\"h2\" sx={{ marginTop: '5px', textAlign: 'center', fontSize: '12px' }}>\n                {people.name}\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      ) : (\n        <Box sx={{ fontSize: 24 }}>No people found</Box>\n      )}\n      \n      <div className=\"people-page\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', margin: '40px 0' }}>\n<Pagination\n      count={totalPages}\n      currentPage={currentPage}\n      onChangePage={handleChangePage}\n      sx={{ '& .MuiPaginationItem-root': { fontSize: '1.8rem', padding: '8px' } }}\n       />\n     </div>\n    </Container>\n   \n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}